Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT
    STR
    STRING

Grammar

Rule 0     S' -> Simulation
Rule 1     Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION GT
Rule 2     M -> LT MAP GT MapDetail LT DIV MAP GT
Rule 3     MapDetail -> ROW EQ NUMERIC SEMICOLOM MapDetail
Rule 4     MapDetail -> COL EQ NUMERIC SEMICOLOM MapDetail
Rule 5     MapDetail -> empty
Rule 6     A -> LT ARMY GT ArmyDetail LT DIV ARMY GT
Rule 7     ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
Rule 8     ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
Rule 9     ArmyDetail -> empty
Rule 10    Program -> Declaration_aster
Rule 11    Declaration -> FuncDecl
Rule 12    Declaration -> VarDecl
Rule 13    Declaration -> Statement
Rule 14    VarDecl -> Type_ ID EQ Expression SEMICOLOM
Rule 15    Statement -> ExprStmt
Rule 16    Statement -> WhileStmt
Rule 17    Statement -> IfStmt
Rule 18    Statement -> PrintStmt
Rule 19    Statement -> ReturnStmt
Rule 20    Statement -> Block
Rule 21    Block -> OKEY Declaration_aster CKEY
Rule 22    Declaration_aster -> Declaration Declaration_aster
Rule 23    Declaration_aster -> empty
Rule 24    ExprStmt -> Expression SEMICOLOM
Rule 25    IfStmt -> IF OPP Expression CLP Statement Else_aster
Rule 26    Else_aster -> ELSE Statement
Rule 27    Else_aster -> empty
Rule 28    PrintStmt -> PRINT Expression SEMICOLOM
Rule 29    ReturnStmt -> RETURN Expression SEMICOLOM
Rule 30    WhileStmt -> WHILE OPP Expression CLP Statement
Rule 31    Expression -> Assignment
Rule 32    Assignment -> ID EQ Logic_or
Rule 33    Assignment -> Type_ ID EQ Logic_or
Rule 34    Assignment -> Logic_or
Rule 35    Logic_or -> Logic_or OR Logic_and
Rule 36    Logic_or -> Logic_and
Rule 37    Logic_and -> Logic_and AND Equality
Rule 38    Logic_and -> Equality
Rule 39    Equality -> Equality NOTEQ Comparison
Rule 40    Equality -> Equality EQEQ Comparison
Rule 41    Equality -> Comparison
Rule 42    Comparison -> Comparison GT Term
Rule 43    Comparison -> Comparison LT Term
Rule 44    Comparison -> Comparison LTE Term
Rule 45    Comparison -> Comparison GTE Term
Rule 46    Comparison -> Term
Rule 47    Term -> Term MINUS Factor
Rule 48    Term -> Term PLUS Factor
Rule 49    Term -> Factor
Rule 50    Factor -> Factor STAR Unary
Rule 51    Factor -> Factor DIV Unary
Rule 52    Factor -> Unary
Rule 53    Unary -> NOT Unary
Rule 54    Unary -> MINUS Unary
Rule 55    Unary -> Call
Rule 56    Call -> Primary OPP Arguments CLP
Rule 57    Call -> Primary
Rule 58    Arguments -> empty
Rule 59    Primary -> TRUE
Rule 60    Primary -> FALSE
Rule 61    Primary -> NUMERIC
Rule 62    Primary -> NIL
Rule 63    Primary -> ID
Rule 64    Arguments -> Expression Expression_aster
Rule 65    Expression_aster -> COMMA Expression Expression_aster
Rule 66    Expression_aster -> empty
Rule 67    FuncDecl -> FUNC Function
Rule 68    Function -> ID OPP Params CLP Block
Rule 69    Params -> Type_ ID ParamsAster
Rule 70    Params -> empty
Rule 71    ParamsAster -> COMMA Params ParamsAster
Rule 72    ParamsAster -> empty
Rule 73    Type_ -> INT
Rule 74    empty -> <empty>

Terminals, with rules where they appear

AMOUNT               : 8
AND                  : 37
ARMY                 : 6 6
ARMY_name            : 7
CKEY                 : 21
CLP                  : 25 30 56 68
COL                  : 4
COMMA                : 65 71
DIV                  : 1 2 6 51
DOT                  : 
ELSE                 : 26
EQ                   : 3 4 7 8 14 32 33
EQEQ                 : 40
FALSE                : 60
FUNC                 : 67
GT                   : 1 1 2 2 6 6 42
GTE                  : 45
ID                   : 14 32 33 63 68 69
IF                   : 25
INT                  : 73
LT                   : 1 1 2 2 6 6 43
LTE                  : 44
MAP                  : 2 2
MINUS                : 47 54
NIL                  : 62
NOT                  : 53
NOTEQ                : 39
NUMERIC              : 3 4 7 8 61
OKEY                 : 21
OPP                  : 25 30 56 68
OR                   : 35
PLUS                 : 48
PRINT                : 28
RETURN               : 29
ROW                  : 3
SEMICOLOM            : 3 4 7 8 14 24 28 29
SIMULATION           : 1 1
STAR                 : 50
STR                  : 
STRING               : 
TRUE                 : 59
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

A                    : 1 1
Arguments            : 56
ArmyDetail           : 6 7 8
Assignment           : 31
Block                : 20 68
Call                 : 55
Comparison           : 39 40 41 42 43 44 45
Declaration          : 22
Declaration_aster    : 10 21 22
Else_aster           : 25
Equality             : 37 38 39 40
ExprStmt             : 15
Expression           : 14 24 25 28 29 30 64 65
Expression_aster     : 64 65
Factor               : 47 48 49 50 51
FuncDecl             : 11
Function             : 67
IfStmt               : 17
Logic_and            : 35 36 37
Logic_or             : 32 33 34 35
M                    : 1
MapDetail            : 2 3 4
Params               : 68 71
ParamsAster          : 69 71
Primary              : 56 57
PrintStmt            : 18
Program              : 1
ReturnStmt           : 19
Simulation           : 0
Statement            : 13 25 26 30
Term                 : 42 43 44 45 46 47 48
Type_                : 14 33 69
Unary                : 50 51 52 53 54
VarDecl              : 12
WhileStmt            : 16
empty                : 5 9 23 27 58 66 70 72

Parsing method: LALR

state 0

    (0) S' -> . Simulation
    (1) Simulation -> . LT SIMULATION GT M A A Program LT DIV SIMULATION GT

    LT              shift and go to state 2

    Simulation                     shift and go to state 1

state 1

    (0) S' -> Simulation .



state 2

    (1) Simulation -> LT . SIMULATION GT M A A Program LT DIV SIMULATION GT

    SIMULATION      shift and go to state 3


state 3

    (1) Simulation -> LT SIMULATION . GT M A A Program LT DIV SIMULATION GT

    GT              shift and go to state 4


state 4

    (1) Simulation -> LT SIMULATION GT . M A A Program LT DIV SIMULATION GT
    (2) M -> . LT MAP GT MapDetail LT DIV MAP GT

    LT              shift and go to state 5

    M                              shift and go to state 6

state 5

    (2) M -> LT . MAP GT MapDetail LT DIV MAP GT

    MAP             shift and go to state 7


state 6

    (1) Simulation -> LT SIMULATION GT M . A A Program LT DIV SIMULATION GT
    (6) A -> . LT ARMY GT ArmyDetail LT DIV ARMY GT

    LT              shift and go to state 8

    A                              shift and go to state 9

state 7

    (2) M -> LT MAP . GT MapDetail LT DIV MAP GT

    GT              shift and go to state 10


state 8

    (6) A -> LT . ARMY GT ArmyDetail LT DIV ARMY GT

    ARMY            shift and go to state 11


state 9

    (1) Simulation -> LT SIMULATION GT M A . A Program LT DIV SIMULATION GT
    (6) A -> . LT ARMY GT ArmyDetail LT DIV ARMY GT

    LT              shift and go to state 8

    A                              shift and go to state 12

state 10

    (2) M -> LT MAP GT . MapDetail LT DIV MAP GT
    (3) MapDetail -> . ROW EQ NUMERIC SEMICOLOM MapDetail
    (4) MapDetail -> . COL EQ NUMERIC SEMICOLOM MapDetail
    (5) MapDetail -> . empty
    (74) empty -> .

    ROW             shift and go to state 14
    COL             shift and go to state 15
    LT              reduce using rule 74 (empty -> .)

    MapDetail                      shift and go to state 13
    empty                          shift and go to state 16

state 11

    (6) A -> LT ARMY . GT ArmyDetail LT DIV ARMY GT

    GT              shift and go to state 17


state 12

    (1) Simulation -> LT SIMULATION GT M A A . Program LT DIV SIMULATION GT
    (10) Program -> . Declaration_aster
    (22) Declaration_aster -> . Declaration Declaration_aster
    (23) Declaration_aster -> . empty
    (11) Declaration -> . FuncDecl
    (12) Declaration -> . VarDecl
    (13) Declaration -> . Statement
    (74) empty -> .
    (67) FuncDecl -> . FUNC Function
    (14) VarDecl -> . Type_ ID EQ Expression SEMICOLOM
    (15) Statement -> . ExprStmt
    (16) Statement -> . WhileStmt
    (17) Statement -> . IfStmt
    (18) Statement -> . PrintStmt
    (19) Statement -> . ReturnStmt
    (20) Statement -> . Block
    (73) Type_ -> . INT
    (24) ExprStmt -> . Expression SEMICOLOM
    (30) WhileStmt -> . WHILE OPP Expression CLP Statement
    (25) IfStmt -> . IF OPP Expression CLP Statement Else_aster
    (28) PrintStmt -> . PRINT Expression SEMICOLOM
    (29) ReturnStmt -> . RETURN Expression SEMICOLOM
    (21) Block -> . OKEY Declaration_aster CKEY
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    LT              reduce using rule 74 (empty -> .)
    FUNC            shift and go to state 25
    INT             shift and go to state 35
    WHILE           shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    ID              shift and go to state 27
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Program                        shift and go to state 18
    Declaration_aster              shift and go to state 19
    Declaration                    shift and go to state 20
    empty                          shift and go to state 21
    FuncDecl                       shift and go to state 22
    VarDecl                        shift and go to state 23
    Statement                      shift and go to state 24
    Type_                          shift and go to state 26
    Expression                     shift and go to state 28
    ExprStmt                       shift and go to state 29
    WhileStmt                      shift and go to state 30
    IfStmt                         shift and go to state 31
    PrintStmt                      shift and go to state 32
    ReturnStmt                     shift and go to state 33
    Block                          shift and go to state 34
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 13

    (2) M -> LT MAP GT MapDetail . LT DIV MAP GT

    LT              shift and go to state 57


state 14

    (3) MapDetail -> ROW . EQ NUMERIC SEMICOLOM MapDetail

    EQ              shift and go to state 58


state 15

    (4) MapDetail -> COL . EQ NUMERIC SEMICOLOM MapDetail

    EQ              shift and go to state 59


state 16

    (5) MapDetail -> empty .

    LT              reduce using rule 5 (MapDetail -> empty .)


state 17

    (6) A -> LT ARMY GT . ArmyDetail LT DIV ARMY GT
    (7) ArmyDetail -> . ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
    (8) ArmyDetail -> . AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
    (9) ArmyDetail -> . empty
    (74) empty -> .

    ARMY_name       shift and go to state 61
    AMOUNT          shift and go to state 62
    LT              reduce using rule 74 (empty -> .)

    ArmyDetail                     shift and go to state 60
    empty                          shift and go to state 63

state 18

    (1) Simulation -> LT SIMULATION GT M A A Program . LT DIV SIMULATION GT

    LT              shift and go to state 64


state 19

    (10) Program -> Declaration_aster .

    LT              reduce using rule 10 (Program -> Declaration_aster .)


state 20

    (22) Declaration_aster -> Declaration . Declaration_aster
    (22) Declaration_aster -> . Declaration Declaration_aster
    (23) Declaration_aster -> . empty
    (11) Declaration -> . FuncDecl
    (12) Declaration -> . VarDecl
    (13) Declaration -> . Statement
    (74) empty -> .
    (67) FuncDecl -> . FUNC Function
    (14) VarDecl -> . Type_ ID EQ Expression SEMICOLOM
    (15) Statement -> . ExprStmt
    (16) Statement -> . WhileStmt
    (17) Statement -> . IfStmt
    (18) Statement -> . PrintStmt
    (19) Statement -> . ReturnStmt
    (20) Statement -> . Block
    (73) Type_ -> . INT
    (24) ExprStmt -> . Expression SEMICOLOM
    (30) WhileStmt -> . WHILE OPP Expression CLP Statement
    (25) IfStmt -> . IF OPP Expression CLP Statement Else_aster
    (28) PrintStmt -> . PRINT Expression SEMICOLOM
    (29) ReturnStmt -> . RETURN Expression SEMICOLOM
    (21) Block -> . OKEY Declaration_aster CKEY
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    LT              reduce using rule 74 (empty -> .)
    CKEY            reduce using rule 74 (empty -> .)
    FUNC            shift and go to state 25
    INT             shift and go to state 35
    WHILE           shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    ID              shift and go to state 27
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Declaration                    shift and go to state 20
    Declaration_aster              shift and go to state 65
    empty                          shift and go to state 21
    FuncDecl                       shift and go to state 22
    VarDecl                        shift and go to state 23
    Statement                      shift and go to state 24
    Type_                          shift and go to state 26
    Expression                     shift and go to state 28
    ExprStmt                       shift and go to state 29
    WhileStmt                      shift and go to state 30
    IfStmt                         shift and go to state 31
    PrintStmt                      shift and go to state 32
    ReturnStmt                     shift and go to state 33
    Block                          shift and go to state 34
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 21

    (23) Declaration_aster -> empty .

    LT              reduce using rule 23 (Declaration_aster -> empty .)
    CKEY            reduce using rule 23 (Declaration_aster -> empty .)


state 22

    (11) Declaration -> FuncDecl .

    FUNC            reduce using rule 11 (Declaration -> FuncDecl .)
    INT             reduce using rule 11 (Declaration -> FuncDecl .)
    WHILE           reduce using rule 11 (Declaration -> FuncDecl .)
    IF              reduce using rule 11 (Declaration -> FuncDecl .)
    PRINT           reduce using rule 11 (Declaration -> FuncDecl .)
    RETURN          reduce using rule 11 (Declaration -> FuncDecl .)
    OKEY            reduce using rule 11 (Declaration -> FuncDecl .)
    ID              reduce using rule 11 (Declaration -> FuncDecl .)
    NOT             reduce using rule 11 (Declaration -> FuncDecl .)
    MINUS           reduce using rule 11 (Declaration -> FuncDecl .)
    TRUE            reduce using rule 11 (Declaration -> FuncDecl .)
    FALSE           reduce using rule 11 (Declaration -> FuncDecl .)
    NUMERIC         reduce using rule 11 (Declaration -> FuncDecl .)
    NIL             reduce using rule 11 (Declaration -> FuncDecl .)
    LT              reduce using rule 11 (Declaration -> FuncDecl .)
    CKEY            reduce using rule 11 (Declaration -> FuncDecl .)


state 23

    (12) Declaration -> VarDecl .

    FUNC            reduce using rule 12 (Declaration -> VarDecl .)
    INT             reduce using rule 12 (Declaration -> VarDecl .)
    WHILE           reduce using rule 12 (Declaration -> VarDecl .)
    IF              reduce using rule 12 (Declaration -> VarDecl .)
    PRINT           reduce using rule 12 (Declaration -> VarDecl .)
    RETURN          reduce using rule 12 (Declaration -> VarDecl .)
    OKEY            reduce using rule 12 (Declaration -> VarDecl .)
    ID              reduce using rule 12 (Declaration -> VarDecl .)
    NOT             reduce using rule 12 (Declaration -> VarDecl .)
    MINUS           reduce using rule 12 (Declaration -> VarDecl .)
    TRUE            reduce using rule 12 (Declaration -> VarDecl .)
    FALSE           reduce using rule 12 (Declaration -> VarDecl .)
    NUMERIC         reduce using rule 12 (Declaration -> VarDecl .)
    NIL             reduce using rule 12 (Declaration -> VarDecl .)
    LT              reduce using rule 12 (Declaration -> VarDecl .)
    CKEY            reduce using rule 12 (Declaration -> VarDecl .)


state 24

    (13) Declaration -> Statement .

    FUNC            reduce using rule 13 (Declaration -> Statement .)
    INT             reduce using rule 13 (Declaration -> Statement .)
    WHILE           reduce using rule 13 (Declaration -> Statement .)
    IF              reduce using rule 13 (Declaration -> Statement .)
    PRINT           reduce using rule 13 (Declaration -> Statement .)
    RETURN          reduce using rule 13 (Declaration -> Statement .)
    OKEY            reduce using rule 13 (Declaration -> Statement .)
    ID              reduce using rule 13 (Declaration -> Statement .)
    NOT             reduce using rule 13 (Declaration -> Statement .)
    MINUS           reduce using rule 13 (Declaration -> Statement .)
    TRUE            reduce using rule 13 (Declaration -> Statement .)
    FALSE           reduce using rule 13 (Declaration -> Statement .)
    NUMERIC         reduce using rule 13 (Declaration -> Statement .)
    NIL             reduce using rule 13 (Declaration -> Statement .)
    LT              reduce using rule 13 (Declaration -> Statement .)
    CKEY            reduce using rule 13 (Declaration -> Statement .)


state 25

    (67) FuncDecl -> FUNC . Function
    (68) Function -> . ID OPP Params CLP Block

    ID              shift and go to state 67

    Function                       shift and go to state 66

state 26

    (14) VarDecl -> Type_ . ID EQ Expression SEMICOLOM
    (33) Assignment -> Type_ . ID EQ Logic_or

    ID              shift and go to state 68


state 27

    (32) Assignment -> ID . EQ Logic_or
    (63) Primary -> ID .

    EQ              shift and go to state 69
    OPP             reduce using rule 63 (Primary -> ID .)
    STAR            reduce using rule 63 (Primary -> ID .)
    DIV             reduce using rule 63 (Primary -> ID .)
    MINUS           reduce using rule 63 (Primary -> ID .)
    PLUS            reduce using rule 63 (Primary -> ID .)
    GT              reduce using rule 63 (Primary -> ID .)
    LT              reduce using rule 63 (Primary -> ID .)
    LTE             reduce using rule 63 (Primary -> ID .)
    GTE             reduce using rule 63 (Primary -> ID .)
    NOTEQ           reduce using rule 63 (Primary -> ID .)
    EQEQ            reduce using rule 63 (Primary -> ID .)
    AND             reduce using rule 63 (Primary -> ID .)
    OR              reduce using rule 63 (Primary -> ID .)
    SEMICOLOM       reduce using rule 63 (Primary -> ID .)
    CLP             reduce using rule 63 (Primary -> ID .)
    COMMA           reduce using rule 63 (Primary -> ID .)


state 28

    (24) ExprStmt -> Expression . SEMICOLOM

    SEMICOLOM       shift and go to state 70


state 29

    (15) Statement -> ExprStmt .

    FUNC            reduce using rule 15 (Statement -> ExprStmt .)
    INT             reduce using rule 15 (Statement -> ExprStmt .)
    WHILE           reduce using rule 15 (Statement -> ExprStmt .)
    IF              reduce using rule 15 (Statement -> ExprStmt .)
    PRINT           reduce using rule 15 (Statement -> ExprStmt .)
    RETURN          reduce using rule 15 (Statement -> ExprStmt .)
    OKEY            reduce using rule 15 (Statement -> ExprStmt .)
    ID              reduce using rule 15 (Statement -> ExprStmt .)
    NOT             reduce using rule 15 (Statement -> ExprStmt .)
    MINUS           reduce using rule 15 (Statement -> ExprStmt .)
    TRUE            reduce using rule 15 (Statement -> ExprStmt .)
    FALSE           reduce using rule 15 (Statement -> ExprStmt .)
    NUMERIC         reduce using rule 15 (Statement -> ExprStmt .)
    NIL             reduce using rule 15 (Statement -> ExprStmt .)
    LT              reduce using rule 15 (Statement -> ExprStmt .)
    CKEY            reduce using rule 15 (Statement -> ExprStmt .)
    ELSE            reduce using rule 15 (Statement -> ExprStmt .)


state 30

    (16) Statement -> WhileStmt .

    FUNC            reduce using rule 16 (Statement -> WhileStmt .)
    INT             reduce using rule 16 (Statement -> WhileStmt .)
    WHILE           reduce using rule 16 (Statement -> WhileStmt .)
    IF              reduce using rule 16 (Statement -> WhileStmt .)
    PRINT           reduce using rule 16 (Statement -> WhileStmt .)
    RETURN          reduce using rule 16 (Statement -> WhileStmt .)
    OKEY            reduce using rule 16 (Statement -> WhileStmt .)
    ID              reduce using rule 16 (Statement -> WhileStmt .)
    NOT             reduce using rule 16 (Statement -> WhileStmt .)
    MINUS           reduce using rule 16 (Statement -> WhileStmt .)
    TRUE            reduce using rule 16 (Statement -> WhileStmt .)
    FALSE           reduce using rule 16 (Statement -> WhileStmt .)
    NUMERIC         reduce using rule 16 (Statement -> WhileStmt .)
    NIL             reduce using rule 16 (Statement -> WhileStmt .)
    LT              reduce using rule 16 (Statement -> WhileStmt .)
    CKEY            reduce using rule 16 (Statement -> WhileStmt .)
    ELSE            reduce using rule 16 (Statement -> WhileStmt .)


state 31

    (17) Statement -> IfStmt .

    FUNC            reduce using rule 17 (Statement -> IfStmt .)
    INT             reduce using rule 17 (Statement -> IfStmt .)
    WHILE           reduce using rule 17 (Statement -> IfStmt .)
    IF              reduce using rule 17 (Statement -> IfStmt .)
    PRINT           reduce using rule 17 (Statement -> IfStmt .)
    RETURN          reduce using rule 17 (Statement -> IfStmt .)
    OKEY            reduce using rule 17 (Statement -> IfStmt .)
    ID              reduce using rule 17 (Statement -> IfStmt .)
    NOT             reduce using rule 17 (Statement -> IfStmt .)
    MINUS           reduce using rule 17 (Statement -> IfStmt .)
    TRUE            reduce using rule 17 (Statement -> IfStmt .)
    FALSE           reduce using rule 17 (Statement -> IfStmt .)
    NUMERIC         reduce using rule 17 (Statement -> IfStmt .)
    NIL             reduce using rule 17 (Statement -> IfStmt .)
    LT              reduce using rule 17 (Statement -> IfStmt .)
    CKEY            reduce using rule 17 (Statement -> IfStmt .)
    ELSE            reduce using rule 17 (Statement -> IfStmt .)


state 32

    (18) Statement -> PrintStmt .

    FUNC            reduce using rule 18 (Statement -> PrintStmt .)
    INT             reduce using rule 18 (Statement -> PrintStmt .)
    WHILE           reduce using rule 18 (Statement -> PrintStmt .)
    IF              reduce using rule 18 (Statement -> PrintStmt .)
    PRINT           reduce using rule 18 (Statement -> PrintStmt .)
    RETURN          reduce using rule 18 (Statement -> PrintStmt .)
    OKEY            reduce using rule 18 (Statement -> PrintStmt .)
    ID              reduce using rule 18 (Statement -> PrintStmt .)
    NOT             reduce using rule 18 (Statement -> PrintStmt .)
    MINUS           reduce using rule 18 (Statement -> PrintStmt .)
    TRUE            reduce using rule 18 (Statement -> PrintStmt .)
    FALSE           reduce using rule 18 (Statement -> PrintStmt .)
    NUMERIC         reduce using rule 18 (Statement -> PrintStmt .)
    NIL             reduce using rule 18 (Statement -> PrintStmt .)
    LT              reduce using rule 18 (Statement -> PrintStmt .)
    CKEY            reduce using rule 18 (Statement -> PrintStmt .)
    ELSE            reduce using rule 18 (Statement -> PrintStmt .)


state 33

    (19) Statement -> ReturnStmt .

    FUNC            reduce using rule 19 (Statement -> ReturnStmt .)
    INT             reduce using rule 19 (Statement -> ReturnStmt .)
    WHILE           reduce using rule 19 (Statement -> ReturnStmt .)
    IF              reduce using rule 19 (Statement -> ReturnStmt .)
    PRINT           reduce using rule 19 (Statement -> ReturnStmt .)
    RETURN          reduce using rule 19 (Statement -> ReturnStmt .)
    OKEY            reduce using rule 19 (Statement -> ReturnStmt .)
    ID              reduce using rule 19 (Statement -> ReturnStmt .)
    NOT             reduce using rule 19 (Statement -> ReturnStmt .)
    MINUS           reduce using rule 19 (Statement -> ReturnStmt .)
    TRUE            reduce using rule 19 (Statement -> ReturnStmt .)
    FALSE           reduce using rule 19 (Statement -> ReturnStmt .)
    NUMERIC         reduce using rule 19 (Statement -> ReturnStmt .)
    NIL             reduce using rule 19 (Statement -> ReturnStmt .)
    LT              reduce using rule 19 (Statement -> ReturnStmt .)
    CKEY            reduce using rule 19 (Statement -> ReturnStmt .)
    ELSE            reduce using rule 19 (Statement -> ReturnStmt .)


state 34

    (20) Statement -> Block .

    FUNC            reduce using rule 20 (Statement -> Block .)
    INT             reduce using rule 20 (Statement -> Block .)
    WHILE           reduce using rule 20 (Statement -> Block .)
    IF              reduce using rule 20 (Statement -> Block .)
    PRINT           reduce using rule 20 (Statement -> Block .)
    RETURN          reduce using rule 20 (Statement -> Block .)
    OKEY            reduce using rule 20 (Statement -> Block .)
    ID              reduce using rule 20 (Statement -> Block .)
    NOT             reduce using rule 20 (Statement -> Block .)
    MINUS           reduce using rule 20 (Statement -> Block .)
    TRUE            reduce using rule 20 (Statement -> Block .)
    FALSE           reduce using rule 20 (Statement -> Block .)
    NUMERIC         reduce using rule 20 (Statement -> Block .)
    NIL             reduce using rule 20 (Statement -> Block .)
    LT              reduce using rule 20 (Statement -> Block .)
    CKEY            reduce using rule 20 (Statement -> Block .)
    ELSE            reduce using rule 20 (Statement -> Block .)


state 35

    (73) Type_ -> INT .

    ID              reduce using rule 73 (Type_ -> INT .)


state 36

    (30) WhileStmt -> WHILE . OPP Expression CLP Statement

    OPP             shift and go to state 71


state 37

    (25) IfStmt -> IF . OPP Expression CLP Statement Else_aster

    OPP             shift and go to state 72


state 38

    (28) PrintStmt -> PRINT . Expression SEMICOLOM
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Expression                     shift and go to state 73
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 39

    (29) ReturnStmt -> RETURN . Expression SEMICOLOM
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Expression                     shift and go to state 75
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 40

    (21) Block -> OKEY . Declaration_aster CKEY
    (22) Declaration_aster -> . Declaration Declaration_aster
    (23) Declaration_aster -> . empty
    (11) Declaration -> . FuncDecl
    (12) Declaration -> . VarDecl
    (13) Declaration -> . Statement
    (74) empty -> .
    (67) FuncDecl -> . FUNC Function
    (14) VarDecl -> . Type_ ID EQ Expression SEMICOLOM
    (15) Statement -> . ExprStmt
    (16) Statement -> . WhileStmt
    (17) Statement -> . IfStmt
    (18) Statement -> . PrintStmt
    (19) Statement -> . ReturnStmt
    (20) Statement -> . Block
    (73) Type_ -> . INT
    (24) ExprStmt -> . Expression SEMICOLOM
    (30) WhileStmt -> . WHILE OPP Expression CLP Statement
    (25) IfStmt -> . IF OPP Expression CLP Statement Else_aster
    (28) PrintStmt -> . PRINT Expression SEMICOLOM
    (29) ReturnStmt -> . RETURN Expression SEMICOLOM
    (21) Block -> . OKEY Declaration_aster CKEY
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    CKEY            reduce using rule 74 (empty -> .)
    FUNC            shift and go to state 25
    INT             shift and go to state 35
    WHILE           shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    ID              shift and go to state 27
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Declaration_aster              shift and go to state 76
    Declaration                    shift and go to state 20
    empty                          shift and go to state 21
    FuncDecl                       shift and go to state 22
    VarDecl                        shift and go to state 23
    Statement                      shift and go to state 24
    Type_                          shift and go to state 26
    Expression                     shift and go to state 28
    ExprStmt                       shift and go to state 29
    WhileStmt                      shift and go to state 30
    IfStmt                         shift and go to state 31
    PrintStmt                      shift and go to state 32
    ReturnStmt                     shift and go to state 33
    Block                          shift and go to state 34
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 41

    (31) Expression -> Assignment .

    SEMICOLOM       reduce using rule 31 (Expression -> Assignment .)
    CLP             reduce using rule 31 (Expression -> Assignment .)
    COMMA           reduce using rule 31 (Expression -> Assignment .)


state 42

    (34) Assignment -> Logic_or .
    (35) Logic_or -> Logic_or . OR Logic_and

    SEMICOLOM       reduce using rule 34 (Assignment -> Logic_or .)
    CLP             reduce using rule 34 (Assignment -> Logic_or .)
    COMMA           reduce using rule 34 (Assignment -> Logic_or .)
    OR              shift and go to state 77


state 43

    (36) Logic_or -> Logic_and .
    (37) Logic_and -> Logic_and . AND Equality

    OR              reduce using rule 36 (Logic_or -> Logic_and .)
    SEMICOLOM       reduce using rule 36 (Logic_or -> Logic_and .)
    CLP             reduce using rule 36 (Logic_or -> Logic_and .)
    COMMA           reduce using rule 36 (Logic_or -> Logic_and .)
    AND             shift and go to state 78


state 44

    (38) Logic_and -> Equality .
    (39) Equality -> Equality . NOTEQ Comparison
    (40) Equality -> Equality . EQEQ Comparison

    AND             reduce using rule 38 (Logic_and -> Equality .)
    OR              reduce using rule 38 (Logic_and -> Equality .)
    SEMICOLOM       reduce using rule 38 (Logic_and -> Equality .)
    CLP             reduce using rule 38 (Logic_and -> Equality .)
    COMMA           reduce using rule 38 (Logic_and -> Equality .)
    NOTEQ           shift and go to state 79
    EQEQ            shift and go to state 80


state 45

    (41) Equality -> Comparison .
    (42) Comparison -> Comparison . GT Term
    (43) Comparison -> Comparison . LT Term
    (44) Comparison -> Comparison . LTE Term
    (45) Comparison -> Comparison . GTE Term

    NOTEQ           reduce using rule 41 (Equality -> Comparison .)
    EQEQ            reduce using rule 41 (Equality -> Comparison .)
    AND             reduce using rule 41 (Equality -> Comparison .)
    OR              reduce using rule 41 (Equality -> Comparison .)
    SEMICOLOM       reduce using rule 41 (Equality -> Comparison .)
    CLP             reduce using rule 41 (Equality -> Comparison .)
    COMMA           reduce using rule 41 (Equality -> Comparison .)
    GT              shift and go to state 81
    LT              shift and go to state 82
    LTE             shift and go to state 83
    GTE             shift and go to state 84


state 46

    (46) Comparison -> Term .
    (47) Term -> Term . MINUS Factor
    (48) Term -> Term . PLUS Factor

    GT              reduce using rule 46 (Comparison -> Term .)
    LT              reduce using rule 46 (Comparison -> Term .)
    LTE             reduce using rule 46 (Comparison -> Term .)
    GTE             reduce using rule 46 (Comparison -> Term .)
    NOTEQ           reduce using rule 46 (Comparison -> Term .)
    EQEQ            reduce using rule 46 (Comparison -> Term .)
    AND             reduce using rule 46 (Comparison -> Term .)
    OR              reduce using rule 46 (Comparison -> Term .)
    SEMICOLOM       reduce using rule 46 (Comparison -> Term .)
    CLP             reduce using rule 46 (Comparison -> Term .)
    COMMA           reduce using rule 46 (Comparison -> Term .)
    MINUS           shift and go to state 85
    PLUS            shift and go to state 86


state 47

    (54) Unary -> MINUS . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Unary                          shift and go to state 87
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 48

    (49) Term -> Factor .
    (50) Factor -> Factor . STAR Unary
    (51) Factor -> Factor . DIV Unary

    MINUS           reduce using rule 49 (Term -> Factor .)
    PLUS            reduce using rule 49 (Term -> Factor .)
    GT              reduce using rule 49 (Term -> Factor .)
    LT              reduce using rule 49 (Term -> Factor .)
    LTE             reduce using rule 49 (Term -> Factor .)
    GTE             reduce using rule 49 (Term -> Factor .)
    NOTEQ           reduce using rule 49 (Term -> Factor .)
    EQEQ            reduce using rule 49 (Term -> Factor .)
    AND             reduce using rule 49 (Term -> Factor .)
    OR              reduce using rule 49 (Term -> Factor .)
    SEMICOLOM       reduce using rule 49 (Term -> Factor .)
    CLP             reduce using rule 49 (Term -> Factor .)
    COMMA           reduce using rule 49 (Term -> Factor .)
    STAR            shift and go to state 89
    DIV             shift and go to state 90


state 49

    (52) Factor -> Unary .

    STAR            reduce using rule 52 (Factor -> Unary .)
    DIV             reduce using rule 52 (Factor -> Unary .)
    MINUS           reduce using rule 52 (Factor -> Unary .)
    PLUS            reduce using rule 52 (Factor -> Unary .)
    GT              reduce using rule 52 (Factor -> Unary .)
    LT              reduce using rule 52 (Factor -> Unary .)
    LTE             reduce using rule 52 (Factor -> Unary .)
    GTE             reduce using rule 52 (Factor -> Unary .)
    NOTEQ           reduce using rule 52 (Factor -> Unary .)
    EQEQ            reduce using rule 52 (Factor -> Unary .)
    AND             reduce using rule 52 (Factor -> Unary .)
    OR              reduce using rule 52 (Factor -> Unary .)
    SEMICOLOM       reduce using rule 52 (Factor -> Unary .)
    CLP             reduce using rule 52 (Factor -> Unary .)
    COMMA           reduce using rule 52 (Factor -> Unary .)


state 50

    (53) Unary -> NOT . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Unary                          shift and go to state 91
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 51

    (55) Unary -> Call .

    STAR            reduce using rule 55 (Unary -> Call .)
    DIV             reduce using rule 55 (Unary -> Call .)
    MINUS           reduce using rule 55 (Unary -> Call .)
    PLUS            reduce using rule 55 (Unary -> Call .)
    GT              reduce using rule 55 (Unary -> Call .)
    LT              reduce using rule 55 (Unary -> Call .)
    LTE             reduce using rule 55 (Unary -> Call .)
    GTE             reduce using rule 55 (Unary -> Call .)
    NOTEQ           reduce using rule 55 (Unary -> Call .)
    EQEQ            reduce using rule 55 (Unary -> Call .)
    AND             reduce using rule 55 (Unary -> Call .)
    OR              reduce using rule 55 (Unary -> Call .)
    SEMICOLOM       reduce using rule 55 (Unary -> Call .)
    CLP             reduce using rule 55 (Unary -> Call .)
    COMMA           reduce using rule 55 (Unary -> Call .)


state 52

    (56) Call -> Primary . OPP Arguments CLP
    (57) Call -> Primary .

    OPP             shift and go to state 92
    STAR            reduce using rule 57 (Call -> Primary .)
    DIV             reduce using rule 57 (Call -> Primary .)
    MINUS           reduce using rule 57 (Call -> Primary .)
    PLUS            reduce using rule 57 (Call -> Primary .)
    GT              reduce using rule 57 (Call -> Primary .)
    LT              reduce using rule 57 (Call -> Primary .)
    LTE             reduce using rule 57 (Call -> Primary .)
    GTE             reduce using rule 57 (Call -> Primary .)
    NOTEQ           reduce using rule 57 (Call -> Primary .)
    EQEQ            reduce using rule 57 (Call -> Primary .)
    AND             reduce using rule 57 (Call -> Primary .)
    OR              reduce using rule 57 (Call -> Primary .)
    SEMICOLOM       reduce using rule 57 (Call -> Primary .)
    CLP             reduce using rule 57 (Call -> Primary .)
    COMMA           reduce using rule 57 (Call -> Primary .)


state 53

    (59) Primary -> TRUE .

    OPP             reduce using rule 59 (Primary -> TRUE .)
    STAR            reduce using rule 59 (Primary -> TRUE .)
    DIV             reduce using rule 59 (Primary -> TRUE .)
    MINUS           reduce using rule 59 (Primary -> TRUE .)
    PLUS            reduce using rule 59 (Primary -> TRUE .)
    GT              reduce using rule 59 (Primary -> TRUE .)
    LT              reduce using rule 59 (Primary -> TRUE .)
    LTE             reduce using rule 59 (Primary -> TRUE .)
    GTE             reduce using rule 59 (Primary -> TRUE .)
    NOTEQ           reduce using rule 59 (Primary -> TRUE .)
    EQEQ            reduce using rule 59 (Primary -> TRUE .)
    AND             reduce using rule 59 (Primary -> TRUE .)
    OR              reduce using rule 59 (Primary -> TRUE .)
    SEMICOLOM       reduce using rule 59 (Primary -> TRUE .)
    CLP             reduce using rule 59 (Primary -> TRUE .)
    COMMA           reduce using rule 59 (Primary -> TRUE .)


state 54

    (60) Primary -> FALSE .

    OPP             reduce using rule 60 (Primary -> FALSE .)
    STAR            reduce using rule 60 (Primary -> FALSE .)
    DIV             reduce using rule 60 (Primary -> FALSE .)
    MINUS           reduce using rule 60 (Primary -> FALSE .)
    PLUS            reduce using rule 60 (Primary -> FALSE .)
    GT              reduce using rule 60 (Primary -> FALSE .)
    LT              reduce using rule 60 (Primary -> FALSE .)
    LTE             reduce using rule 60 (Primary -> FALSE .)
    GTE             reduce using rule 60 (Primary -> FALSE .)
    NOTEQ           reduce using rule 60 (Primary -> FALSE .)
    EQEQ            reduce using rule 60 (Primary -> FALSE .)
    AND             reduce using rule 60 (Primary -> FALSE .)
    OR              reduce using rule 60 (Primary -> FALSE .)
    SEMICOLOM       reduce using rule 60 (Primary -> FALSE .)
    CLP             reduce using rule 60 (Primary -> FALSE .)
    COMMA           reduce using rule 60 (Primary -> FALSE .)


state 55

    (61) Primary -> NUMERIC .

    OPP             reduce using rule 61 (Primary -> NUMERIC .)
    STAR            reduce using rule 61 (Primary -> NUMERIC .)
    DIV             reduce using rule 61 (Primary -> NUMERIC .)
    MINUS           reduce using rule 61 (Primary -> NUMERIC .)
    PLUS            reduce using rule 61 (Primary -> NUMERIC .)
    GT              reduce using rule 61 (Primary -> NUMERIC .)
    LT              reduce using rule 61 (Primary -> NUMERIC .)
    LTE             reduce using rule 61 (Primary -> NUMERIC .)
    GTE             reduce using rule 61 (Primary -> NUMERIC .)
    NOTEQ           reduce using rule 61 (Primary -> NUMERIC .)
    EQEQ            reduce using rule 61 (Primary -> NUMERIC .)
    AND             reduce using rule 61 (Primary -> NUMERIC .)
    OR              reduce using rule 61 (Primary -> NUMERIC .)
    SEMICOLOM       reduce using rule 61 (Primary -> NUMERIC .)
    CLP             reduce using rule 61 (Primary -> NUMERIC .)
    COMMA           reduce using rule 61 (Primary -> NUMERIC .)


state 56

    (62) Primary -> NIL .

    OPP             reduce using rule 62 (Primary -> NIL .)
    STAR            reduce using rule 62 (Primary -> NIL .)
    DIV             reduce using rule 62 (Primary -> NIL .)
    MINUS           reduce using rule 62 (Primary -> NIL .)
    PLUS            reduce using rule 62 (Primary -> NIL .)
    GT              reduce using rule 62 (Primary -> NIL .)
    LT              reduce using rule 62 (Primary -> NIL .)
    LTE             reduce using rule 62 (Primary -> NIL .)
    GTE             reduce using rule 62 (Primary -> NIL .)
    NOTEQ           reduce using rule 62 (Primary -> NIL .)
    EQEQ            reduce using rule 62 (Primary -> NIL .)
    AND             reduce using rule 62 (Primary -> NIL .)
    OR              reduce using rule 62 (Primary -> NIL .)
    SEMICOLOM       reduce using rule 62 (Primary -> NIL .)
    CLP             reduce using rule 62 (Primary -> NIL .)
    COMMA           reduce using rule 62 (Primary -> NIL .)


state 57

    (2) M -> LT MAP GT MapDetail LT . DIV MAP GT

    DIV             shift and go to state 93


state 58

    (3) MapDetail -> ROW EQ . NUMERIC SEMICOLOM MapDetail

    NUMERIC         shift and go to state 94


state 59

    (4) MapDetail -> COL EQ . NUMERIC SEMICOLOM MapDetail

    NUMERIC         shift and go to state 95


state 60

    (6) A -> LT ARMY GT ArmyDetail . LT DIV ARMY GT

    LT              shift and go to state 96


state 61

    (7) ArmyDetail -> ARMY_name . EQ NUMERIC SEMICOLOM ArmyDetail

    EQ              shift and go to state 97


state 62

    (8) ArmyDetail -> AMOUNT . EQ NUMERIC SEMICOLOM ArmyDetail

    EQ              shift and go to state 98


state 63

    (9) ArmyDetail -> empty .

    LT              reduce using rule 9 (ArmyDetail -> empty .)


state 64

    (1) Simulation -> LT SIMULATION GT M A A Program LT . DIV SIMULATION GT

    DIV             shift and go to state 99


state 65

    (22) Declaration_aster -> Declaration Declaration_aster .

    LT              reduce using rule 22 (Declaration_aster -> Declaration Declaration_aster .)
    CKEY            reduce using rule 22 (Declaration_aster -> Declaration Declaration_aster .)


state 66

    (67) FuncDecl -> FUNC Function .

    FUNC            reduce using rule 67 (FuncDecl -> FUNC Function .)
    INT             reduce using rule 67 (FuncDecl -> FUNC Function .)
    WHILE           reduce using rule 67 (FuncDecl -> FUNC Function .)
    IF              reduce using rule 67 (FuncDecl -> FUNC Function .)
    PRINT           reduce using rule 67 (FuncDecl -> FUNC Function .)
    RETURN          reduce using rule 67 (FuncDecl -> FUNC Function .)
    OKEY            reduce using rule 67 (FuncDecl -> FUNC Function .)
    ID              reduce using rule 67 (FuncDecl -> FUNC Function .)
    NOT             reduce using rule 67 (FuncDecl -> FUNC Function .)
    MINUS           reduce using rule 67 (FuncDecl -> FUNC Function .)
    TRUE            reduce using rule 67 (FuncDecl -> FUNC Function .)
    FALSE           reduce using rule 67 (FuncDecl -> FUNC Function .)
    NUMERIC         reduce using rule 67 (FuncDecl -> FUNC Function .)
    NIL             reduce using rule 67 (FuncDecl -> FUNC Function .)
    LT              reduce using rule 67 (FuncDecl -> FUNC Function .)
    CKEY            reduce using rule 67 (FuncDecl -> FUNC Function .)


state 67

    (68) Function -> ID . OPP Params CLP Block

    OPP             shift and go to state 100


state 68

    (14) VarDecl -> Type_ ID . EQ Expression SEMICOLOM
    (33) Assignment -> Type_ ID . EQ Logic_or

    EQ              shift and go to state 101


state 69

    (32) Assignment -> ID EQ . Logic_or
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Logic_or                       shift and go to state 102
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 70

    (24) ExprStmt -> Expression SEMICOLOM .

    FUNC            reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    INT             reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    WHILE           reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    IF              reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    PRINT           reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    RETURN          reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    OKEY            reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    ID              reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    NOT             reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    MINUS           reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    TRUE            reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    FALSE           reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    NUMERIC         reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    NIL             reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    LT              reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    CKEY            reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)
    ELSE            reduce using rule 24 (ExprStmt -> Expression SEMICOLOM .)


state 71

    (30) WhileStmt -> WHILE OPP . Expression CLP Statement
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Expression                     shift and go to state 103
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 72

    (25) IfStmt -> IF OPP . Expression CLP Statement Else_aster
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Expression                     shift and go to state 104
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 73

    (28) PrintStmt -> PRINT Expression . SEMICOLOM

    SEMICOLOM       shift and go to state 105


state 74

    (33) Assignment -> Type_ . ID EQ Logic_or

    ID              shift and go to state 106


state 75

    (29) ReturnStmt -> RETURN Expression . SEMICOLOM

    SEMICOLOM       shift and go to state 107


state 76

    (21) Block -> OKEY Declaration_aster . CKEY

    CKEY            shift and go to state 108


state 77

    (35) Logic_or -> Logic_or OR . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Logic_and                      shift and go to state 109
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 78

    (37) Logic_and -> Logic_and AND . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Equality                       shift and go to state 110
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 79

    (39) Equality -> Equality NOTEQ . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Comparison                     shift and go to state 111
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 80

    (40) Equality -> Equality EQEQ . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Comparison                     shift and go to state 112
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 81

    (42) Comparison -> Comparison GT . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Term                           shift and go to state 113
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 82

    (43) Comparison -> Comparison LT . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Term                           shift and go to state 114
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 83

    (44) Comparison -> Comparison LTE . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Term                           shift and go to state 115
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 84

    (45) Comparison -> Comparison GTE . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Term                           shift and go to state 116
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 85

    (47) Term -> Term MINUS . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Factor                         shift and go to state 117
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 86

    (48) Term -> Term PLUS . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Factor                         shift and go to state 118
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 87

    (54) Unary -> MINUS Unary .

    STAR            reduce using rule 54 (Unary -> MINUS Unary .)
    DIV             reduce using rule 54 (Unary -> MINUS Unary .)
    MINUS           reduce using rule 54 (Unary -> MINUS Unary .)
    PLUS            reduce using rule 54 (Unary -> MINUS Unary .)
    GT              reduce using rule 54 (Unary -> MINUS Unary .)
    LT              reduce using rule 54 (Unary -> MINUS Unary .)
    LTE             reduce using rule 54 (Unary -> MINUS Unary .)
    GTE             reduce using rule 54 (Unary -> MINUS Unary .)
    NOTEQ           reduce using rule 54 (Unary -> MINUS Unary .)
    EQEQ            reduce using rule 54 (Unary -> MINUS Unary .)
    AND             reduce using rule 54 (Unary -> MINUS Unary .)
    OR              reduce using rule 54 (Unary -> MINUS Unary .)
    SEMICOLOM       reduce using rule 54 (Unary -> MINUS Unary .)
    CLP             reduce using rule 54 (Unary -> MINUS Unary .)
    COMMA           reduce using rule 54 (Unary -> MINUS Unary .)


state 88

    (63) Primary -> ID .

    OPP             reduce using rule 63 (Primary -> ID .)
    STAR            reduce using rule 63 (Primary -> ID .)
    DIV             reduce using rule 63 (Primary -> ID .)
    MINUS           reduce using rule 63 (Primary -> ID .)
    PLUS            reduce using rule 63 (Primary -> ID .)
    GT              reduce using rule 63 (Primary -> ID .)
    LT              reduce using rule 63 (Primary -> ID .)
    LTE             reduce using rule 63 (Primary -> ID .)
    GTE             reduce using rule 63 (Primary -> ID .)
    NOTEQ           reduce using rule 63 (Primary -> ID .)
    EQEQ            reduce using rule 63 (Primary -> ID .)
    AND             reduce using rule 63 (Primary -> ID .)
    OR              reduce using rule 63 (Primary -> ID .)
    SEMICOLOM       reduce using rule 63 (Primary -> ID .)
    CLP             reduce using rule 63 (Primary -> ID .)
    COMMA           reduce using rule 63 (Primary -> ID .)


state 89

    (50) Factor -> Factor STAR . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Unary                          shift and go to state 119
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 90

    (51) Factor -> Factor DIV . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Unary                          shift and go to state 120
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 91

    (53) Unary -> NOT Unary .

    STAR            reduce using rule 53 (Unary -> NOT Unary .)
    DIV             reduce using rule 53 (Unary -> NOT Unary .)
    MINUS           reduce using rule 53 (Unary -> NOT Unary .)
    PLUS            reduce using rule 53 (Unary -> NOT Unary .)
    GT              reduce using rule 53 (Unary -> NOT Unary .)
    LT              reduce using rule 53 (Unary -> NOT Unary .)
    LTE             reduce using rule 53 (Unary -> NOT Unary .)
    GTE             reduce using rule 53 (Unary -> NOT Unary .)
    NOTEQ           reduce using rule 53 (Unary -> NOT Unary .)
    EQEQ            reduce using rule 53 (Unary -> NOT Unary .)
    AND             reduce using rule 53 (Unary -> NOT Unary .)
    OR              reduce using rule 53 (Unary -> NOT Unary .)
    SEMICOLOM       reduce using rule 53 (Unary -> NOT Unary .)
    CLP             reduce using rule 53 (Unary -> NOT Unary .)
    COMMA           reduce using rule 53 (Unary -> NOT Unary .)


state 92

    (56) Call -> Primary OPP . Arguments CLP
    (58) Arguments -> . empty
    (64) Arguments -> . Expression Expression_aster
    (74) empty -> .
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    CLP             reduce using rule 74 (empty -> .)
    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Primary                        shift and go to state 52
    Arguments                      shift and go to state 121
    empty                          shift and go to state 122
    Expression                     shift and go to state 123
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51

state 93

    (2) M -> LT MAP GT MapDetail LT DIV . MAP GT

    MAP             shift and go to state 124


state 94

    (3) MapDetail -> ROW EQ NUMERIC . SEMICOLOM MapDetail

    SEMICOLOM       shift and go to state 125


state 95

    (4) MapDetail -> COL EQ NUMERIC . SEMICOLOM MapDetail

    SEMICOLOM       shift and go to state 126


state 96

    (6) A -> LT ARMY GT ArmyDetail LT . DIV ARMY GT

    DIV             shift and go to state 127


state 97

    (7) ArmyDetail -> ARMY_name EQ . NUMERIC SEMICOLOM ArmyDetail

    NUMERIC         shift and go to state 128


state 98

    (8) ArmyDetail -> AMOUNT EQ . NUMERIC SEMICOLOM ArmyDetail

    NUMERIC         shift and go to state 129


state 99

    (1) Simulation -> LT SIMULATION GT M A A Program LT DIV . SIMULATION GT

    SIMULATION      shift and go to state 130


state 100

    (68) Function -> ID OPP . Params CLP Block
    (69) Params -> . Type_ ID ParamsAster
    (70) Params -> . empty
    (73) Type_ -> . INT
    (74) empty -> .

    INT             shift and go to state 35
    CLP             reduce using rule 74 (empty -> .)

    Params                         shift and go to state 131
    Type_                          shift and go to state 132
    empty                          shift and go to state 133

state 101

    (14) VarDecl -> Type_ ID EQ . Expression SEMICOLOM
    (33) Assignment -> Type_ ID EQ . Logic_or
    (31) Expression -> . Assignment
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (73) Type_ -> . INT
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Type_                          shift and go to state 74
    Expression                     shift and go to state 134
    Logic_or                       shift and go to state 135
    Assignment                     shift and go to state 41
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 102

    (32) Assignment -> ID EQ Logic_or .
    (35) Logic_or -> Logic_or . OR Logic_and

    SEMICOLOM       reduce using rule 32 (Assignment -> ID EQ Logic_or .)
    CLP             reduce using rule 32 (Assignment -> ID EQ Logic_or .)
    COMMA           reduce using rule 32 (Assignment -> ID EQ Logic_or .)
    OR              shift and go to state 77


state 103

    (30) WhileStmt -> WHILE OPP Expression . CLP Statement

    CLP             shift and go to state 136


state 104

    (25) IfStmt -> IF OPP Expression . CLP Statement Else_aster

    CLP             shift and go to state 137


state 105

    (28) PrintStmt -> PRINT Expression SEMICOLOM .

    FUNC            reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    INT             reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    WHILE           reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    IF              reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    PRINT           reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    RETURN          reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    OKEY            reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    ID              reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    NOT             reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    MINUS           reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    TRUE            reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    FALSE           reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    NUMERIC         reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    NIL             reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    LT              reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    CKEY            reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)
    ELSE            reduce using rule 28 (PrintStmt -> PRINT Expression SEMICOLOM .)


state 106

    (33) Assignment -> Type_ ID . EQ Logic_or

    EQ              shift and go to state 138


state 107

    (29) ReturnStmt -> RETURN Expression SEMICOLOM .

    FUNC            reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    INT             reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    WHILE           reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    IF              reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    PRINT           reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    RETURN          reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    OKEY            reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    ID              reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    NOT             reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    MINUS           reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    TRUE            reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    FALSE           reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    NUMERIC         reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    NIL             reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    LT              reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    CKEY            reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    ELSE            reduce using rule 29 (ReturnStmt -> RETURN Expression SEMICOLOM .)


state 108

    (21) Block -> OKEY Declaration_aster CKEY .

    FUNC            reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    INT             reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    WHILE           reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    IF              reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    PRINT           reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    RETURN          reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    OKEY            reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    ID              reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    NOT             reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    MINUS           reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    TRUE            reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    FALSE           reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    NUMERIC         reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    NIL             reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    LT              reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    CKEY            reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)
    ELSE            reduce using rule 21 (Block -> OKEY Declaration_aster CKEY .)


state 109

    (35) Logic_or -> Logic_or OR Logic_and .
    (37) Logic_and -> Logic_and . AND Equality

    OR              reduce using rule 35 (Logic_or -> Logic_or OR Logic_and .)
    SEMICOLOM       reduce using rule 35 (Logic_or -> Logic_or OR Logic_and .)
    CLP             reduce using rule 35 (Logic_or -> Logic_or OR Logic_and .)
    COMMA           reduce using rule 35 (Logic_or -> Logic_or OR Logic_and .)
    AND             shift and go to state 78


state 110

    (37) Logic_and -> Logic_and AND Equality .
    (39) Equality -> Equality . NOTEQ Comparison
    (40) Equality -> Equality . EQEQ Comparison

    AND             reduce using rule 37 (Logic_and -> Logic_and AND Equality .)
    OR              reduce using rule 37 (Logic_and -> Logic_and AND Equality .)
    SEMICOLOM       reduce using rule 37 (Logic_and -> Logic_and AND Equality .)
    CLP             reduce using rule 37 (Logic_and -> Logic_and AND Equality .)
    COMMA           reduce using rule 37 (Logic_and -> Logic_and AND Equality .)
    NOTEQ           shift and go to state 79
    EQEQ            shift and go to state 80


state 111

    (39) Equality -> Equality NOTEQ Comparison .
    (42) Comparison -> Comparison . GT Term
    (43) Comparison -> Comparison . LT Term
    (44) Comparison -> Comparison . LTE Term
    (45) Comparison -> Comparison . GTE Term

    NOTEQ           reduce using rule 39 (Equality -> Equality NOTEQ Comparison .)
    EQEQ            reduce using rule 39 (Equality -> Equality NOTEQ Comparison .)
    AND             reduce using rule 39 (Equality -> Equality NOTEQ Comparison .)
    OR              reduce using rule 39 (Equality -> Equality NOTEQ Comparison .)
    SEMICOLOM       reduce using rule 39 (Equality -> Equality NOTEQ Comparison .)
    CLP             reduce using rule 39 (Equality -> Equality NOTEQ Comparison .)
    COMMA           reduce using rule 39 (Equality -> Equality NOTEQ Comparison .)
    GT              shift and go to state 81
    LT              shift and go to state 82
    LTE             shift and go to state 83
    GTE             shift and go to state 84


state 112

    (40) Equality -> Equality EQEQ Comparison .
    (42) Comparison -> Comparison . GT Term
    (43) Comparison -> Comparison . LT Term
    (44) Comparison -> Comparison . LTE Term
    (45) Comparison -> Comparison . GTE Term

    NOTEQ           reduce using rule 40 (Equality -> Equality EQEQ Comparison .)
    EQEQ            reduce using rule 40 (Equality -> Equality EQEQ Comparison .)
    AND             reduce using rule 40 (Equality -> Equality EQEQ Comparison .)
    OR              reduce using rule 40 (Equality -> Equality EQEQ Comparison .)
    SEMICOLOM       reduce using rule 40 (Equality -> Equality EQEQ Comparison .)
    CLP             reduce using rule 40 (Equality -> Equality EQEQ Comparison .)
    COMMA           reduce using rule 40 (Equality -> Equality EQEQ Comparison .)
    GT              shift and go to state 81
    LT              shift and go to state 82
    LTE             shift and go to state 83
    GTE             shift and go to state 84


state 113

    (42) Comparison -> Comparison GT Term .
    (47) Term -> Term . MINUS Factor
    (48) Term -> Term . PLUS Factor

    GT              reduce using rule 42 (Comparison -> Comparison GT Term .)
    LT              reduce using rule 42 (Comparison -> Comparison GT Term .)
    LTE             reduce using rule 42 (Comparison -> Comparison GT Term .)
    GTE             reduce using rule 42 (Comparison -> Comparison GT Term .)
    NOTEQ           reduce using rule 42 (Comparison -> Comparison GT Term .)
    EQEQ            reduce using rule 42 (Comparison -> Comparison GT Term .)
    AND             reduce using rule 42 (Comparison -> Comparison GT Term .)
    OR              reduce using rule 42 (Comparison -> Comparison GT Term .)
    SEMICOLOM       reduce using rule 42 (Comparison -> Comparison GT Term .)
    CLP             reduce using rule 42 (Comparison -> Comparison GT Term .)
    COMMA           reduce using rule 42 (Comparison -> Comparison GT Term .)
    MINUS           shift and go to state 85
    PLUS            shift and go to state 86


state 114

    (43) Comparison -> Comparison LT Term .
    (47) Term -> Term . MINUS Factor
    (48) Term -> Term . PLUS Factor

    GT              reduce using rule 43 (Comparison -> Comparison LT Term .)
    LT              reduce using rule 43 (Comparison -> Comparison LT Term .)
    LTE             reduce using rule 43 (Comparison -> Comparison LT Term .)
    GTE             reduce using rule 43 (Comparison -> Comparison LT Term .)
    NOTEQ           reduce using rule 43 (Comparison -> Comparison LT Term .)
    EQEQ            reduce using rule 43 (Comparison -> Comparison LT Term .)
    AND             reduce using rule 43 (Comparison -> Comparison LT Term .)
    OR              reduce using rule 43 (Comparison -> Comparison LT Term .)
    SEMICOLOM       reduce using rule 43 (Comparison -> Comparison LT Term .)
    CLP             reduce using rule 43 (Comparison -> Comparison LT Term .)
    COMMA           reduce using rule 43 (Comparison -> Comparison LT Term .)
    MINUS           shift and go to state 85
    PLUS            shift and go to state 86


state 115

    (44) Comparison -> Comparison LTE Term .
    (47) Term -> Term . MINUS Factor
    (48) Term -> Term . PLUS Factor

    GT              reduce using rule 44 (Comparison -> Comparison LTE Term .)
    LT              reduce using rule 44 (Comparison -> Comparison LTE Term .)
    LTE             reduce using rule 44 (Comparison -> Comparison LTE Term .)
    GTE             reduce using rule 44 (Comparison -> Comparison LTE Term .)
    NOTEQ           reduce using rule 44 (Comparison -> Comparison LTE Term .)
    EQEQ            reduce using rule 44 (Comparison -> Comparison LTE Term .)
    AND             reduce using rule 44 (Comparison -> Comparison LTE Term .)
    OR              reduce using rule 44 (Comparison -> Comparison LTE Term .)
    SEMICOLOM       reduce using rule 44 (Comparison -> Comparison LTE Term .)
    CLP             reduce using rule 44 (Comparison -> Comparison LTE Term .)
    COMMA           reduce using rule 44 (Comparison -> Comparison LTE Term .)
    MINUS           shift and go to state 85
    PLUS            shift and go to state 86


state 116

    (45) Comparison -> Comparison GTE Term .
    (47) Term -> Term . MINUS Factor
    (48) Term -> Term . PLUS Factor

    GT              reduce using rule 45 (Comparison -> Comparison GTE Term .)
    LT              reduce using rule 45 (Comparison -> Comparison GTE Term .)
    LTE             reduce using rule 45 (Comparison -> Comparison GTE Term .)
    GTE             reduce using rule 45 (Comparison -> Comparison GTE Term .)
    NOTEQ           reduce using rule 45 (Comparison -> Comparison GTE Term .)
    EQEQ            reduce using rule 45 (Comparison -> Comparison GTE Term .)
    AND             reduce using rule 45 (Comparison -> Comparison GTE Term .)
    OR              reduce using rule 45 (Comparison -> Comparison GTE Term .)
    SEMICOLOM       reduce using rule 45 (Comparison -> Comparison GTE Term .)
    CLP             reduce using rule 45 (Comparison -> Comparison GTE Term .)
    COMMA           reduce using rule 45 (Comparison -> Comparison GTE Term .)
    MINUS           shift and go to state 85
    PLUS            shift and go to state 86


state 117

    (47) Term -> Term MINUS Factor .
    (50) Factor -> Factor . STAR Unary
    (51) Factor -> Factor . DIV Unary

    MINUS           reduce using rule 47 (Term -> Term MINUS Factor .)
    PLUS            reduce using rule 47 (Term -> Term MINUS Factor .)
    GT              reduce using rule 47 (Term -> Term MINUS Factor .)
    LT              reduce using rule 47 (Term -> Term MINUS Factor .)
    LTE             reduce using rule 47 (Term -> Term MINUS Factor .)
    GTE             reduce using rule 47 (Term -> Term MINUS Factor .)
    NOTEQ           reduce using rule 47 (Term -> Term MINUS Factor .)
    EQEQ            reduce using rule 47 (Term -> Term MINUS Factor .)
    AND             reduce using rule 47 (Term -> Term MINUS Factor .)
    OR              reduce using rule 47 (Term -> Term MINUS Factor .)
    SEMICOLOM       reduce using rule 47 (Term -> Term MINUS Factor .)
    CLP             reduce using rule 47 (Term -> Term MINUS Factor .)
    COMMA           reduce using rule 47 (Term -> Term MINUS Factor .)
    STAR            shift and go to state 89
    DIV             shift and go to state 90


state 118

    (48) Term -> Term PLUS Factor .
    (50) Factor -> Factor . STAR Unary
    (51) Factor -> Factor . DIV Unary

    MINUS           reduce using rule 48 (Term -> Term PLUS Factor .)
    PLUS            reduce using rule 48 (Term -> Term PLUS Factor .)
    GT              reduce using rule 48 (Term -> Term PLUS Factor .)
    LT              reduce using rule 48 (Term -> Term PLUS Factor .)
    LTE             reduce using rule 48 (Term -> Term PLUS Factor .)
    GTE             reduce using rule 48 (Term -> Term PLUS Factor .)
    NOTEQ           reduce using rule 48 (Term -> Term PLUS Factor .)
    EQEQ            reduce using rule 48 (Term -> Term PLUS Factor .)
    AND             reduce using rule 48 (Term -> Term PLUS Factor .)
    OR              reduce using rule 48 (Term -> Term PLUS Factor .)
    SEMICOLOM       reduce using rule 48 (Term -> Term PLUS Factor .)
    CLP             reduce using rule 48 (Term -> Term PLUS Factor .)
    COMMA           reduce using rule 48 (Term -> Term PLUS Factor .)
    STAR            shift and go to state 89
    DIV             shift and go to state 90


state 119

    (50) Factor -> Factor STAR Unary .

    STAR            reduce using rule 50 (Factor -> Factor STAR Unary .)
    DIV             reduce using rule 50 (Factor -> Factor STAR Unary .)
    MINUS           reduce using rule 50 (Factor -> Factor STAR Unary .)
    PLUS            reduce using rule 50 (Factor -> Factor STAR Unary .)
    GT              reduce using rule 50 (Factor -> Factor STAR Unary .)
    LT              reduce using rule 50 (Factor -> Factor STAR Unary .)
    LTE             reduce using rule 50 (Factor -> Factor STAR Unary .)
    GTE             reduce using rule 50 (Factor -> Factor STAR Unary .)
    NOTEQ           reduce using rule 50 (Factor -> Factor STAR Unary .)
    EQEQ            reduce using rule 50 (Factor -> Factor STAR Unary .)
    AND             reduce using rule 50 (Factor -> Factor STAR Unary .)
    OR              reduce using rule 50 (Factor -> Factor STAR Unary .)
    SEMICOLOM       reduce using rule 50 (Factor -> Factor STAR Unary .)
    CLP             reduce using rule 50 (Factor -> Factor STAR Unary .)
    COMMA           reduce using rule 50 (Factor -> Factor STAR Unary .)


state 120

    (51) Factor -> Factor DIV Unary .

    STAR            reduce using rule 51 (Factor -> Factor DIV Unary .)
    DIV             reduce using rule 51 (Factor -> Factor DIV Unary .)
    MINUS           reduce using rule 51 (Factor -> Factor DIV Unary .)
    PLUS            reduce using rule 51 (Factor -> Factor DIV Unary .)
    GT              reduce using rule 51 (Factor -> Factor DIV Unary .)
    LT              reduce using rule 51 (Factor -> Factor DIV Unary .)
    LTE             reduce using rule 51 (Factor -> Factor DIV Unary .)
    GTE             reduce using rule 51 (Factor -> Factor DIV Unary .)
    NOTEQ           reduce using rule 51 (Factor -> Factor DIV Unary .)
    EQEQ            reduce using rule 51 (Factor -> Factor DIV Unary .)
    AND             reduce using rule 51 (Factor -> Factor DIV Unary .)
    OR              reduce using rule 51 (Factor -> Factor DIV Unary .)
    SEMICOLOM       reduce using rule 51 (Factor -> Factor DIV Unary .)
    CLP             reduce using rule 51 (Factor -> Factor DIV Unary .)
    COMMA           reduce using rule 51 (Factor -> Factor DIV Unary .)


state 121

    (56) Call -> Primary OPP Arguments . CLP

    CLP             shift and go to state 139


state 122

    (58) Arguments -> empty .

    CLP             reduce using rule 58 (Arguments -> empty .)


state 123

    (64) Arguments -> Expression . Expression_aster
    (65) Expression_aster -> . COMMA Expression Expression_aster
    (66) Expression_aster -> . empty
    (74) empty -> .

    COMMA           shift and go to state 141
    CLP             reduce using rule 74 (empty -> .)

    Expression_aster               shift and go to state 140
    empty                          shift and go to state 142

state 124

    (2) M -> LT MAP GT MapDetail LT DIV MAP . GT

    GT              shift and go to state 143


state 125

    (3) MapDetail -> ROW EQ NUMERIC SEMICOLOM . MapDetail
    (3) MapDetail -> . ROW EQ NUMERIC SEMICOLOM MapDetail
    (4) MapDetail -> . COL EQ NUMERIC SEMICOLOM MapDetail
    (5) MapDetail -> . empty
    (74) empty -> .

    ROW             shift and go to state 14
    COL             shift and go to state 15
    LT              reduce using rule 74 (empty -> .)

    MapDetail                      shift and go to state 144
    empty                          shift and go to state 16

state 126

    (4) MapDetail -> COL EQ NUMERIC SEMICOLOM . MapDetail
    (3) MapDetail -> . ROW EQ NUMERIC SEMICOLOM MapDetail
    (4) MapDetail -> . COL EQ NUMERIC SEMICOLOM MapDetail
    (5) MapDetail -> . empty
    (74) empty -> .

    ROW             shift and go to state 14
    COL             shift and go to state 15
    LT              reduce using rule 74 (empty -> .)

    MapDetail                      shift and go to state 145
    empty                          shift and go to state 16

state 127

    (6) A -> LT ARMY GT ArmyDetail LT DIV . ARMY GT

    ARMY            shift and go to state 146


state 128

    (7) ArmyDetail -> ARMY_name EQ NUMERIC . SEMICOLOM ArmyDetail

    SEMICOLOM       shift and go to state 147


state 129

    (8) ArmyDetail -> AMOUNT EQ NUMERIC . SEMICOLOM ArmyDetail

    SEMICOLOM       shift and go to state 148


state 130

    (1) Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION . GT

    GT              shift and go to state 149


state 131

    (68) Function -> ID OPP Params . CLP Block

    CLP             shift and go to state 150


state 132

    (69) Params -> Type_ . ID ParamsAster

    ID              shift and go to state 151


state 133

    (70) Params -> empty .

    CLP             reduce using rule 70 (Params -> empty .)
    COMMA           reduce using rule 70 (Params -> empty .)


state 134

    (14) VarDecl -> Type_ ID EQ Expression . SEMICOLOM

    SEMICOLOM       shift and go to state 152


state 135

    (33) Assignment -> Type_ ID EQ Logic_or .
    (35) Logic_or -> Logic_or . OR Logic_and
    (34) Assignment -> Logic_or .

  ! reduce/reduce conflict for SEMICOLOM resolved using rule 33 (Assignment -> Type_ ID EQ Logic_or .)
    SEMICOLOM       reduce using rule 33 (Assignment -> Type_ ID EQ Logic_or .)
    OR              shift and go to state 77

  ! SEMICOLOM       [ reduce using rule 34 (Assignment -> Logic_or .) ]


state 136

    (30) WhileStmt -> WHILE OPP Expression CLP . Statement
    (15) Statement -> . ExprStmt
    (16) Statement -> . WhileStmt
    (17) Statement -> . IfStmt
    (18) Statement -> . PrintStmt
    (19) Statement -> . ReturnStmt
    (20) Statement -> . Block
    (24) ExprStmt -> . Expression SEMICOLOM
    (30) WhileStmt -> . WHILE OPP Expression CLP Statement
    (25) IfStmt -> . IF OPP Expression CLP Statement Else_aster
    (28) PrintStmt -> . PRINT Expression SEMICOLOM
    (29) ReturnStmt -> . RETURN Expression SEMICOLOM
    (21) Block -> . OKEY Declaration_aster CKEY
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    WHILE           shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Expression                     shift and go to state 28
    Statement                      shift and go to state 153
    ExprStmt                       shift and go to state 29
    WhileStmt                      shift and go to state 30
    IfStmt                         shift and go to state 31
    PrintStmt                      shift and go to state 32
    ReturnStmt                     shift and go to state 33
    Block                          shift and go to state 34
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 137

    (25) IfStmt -> IF OPP Expression CLP . Statement Else_aster
    (15) Statement -> . ExprStmt
    (16) Statement -> . WhileStmt
    (17) Statement -> . IfStmt
    (18) Statement -> . PrintStmt
    (19) Statement -> . ReturnStmt
    (20) Statement -> . Block
    (24) ExprStmt -> . Expression SEMICOLOM
    (30) WhileStmt -> . WHILE OPP Expression CLP Statement
    (25) IfStmt -> . IF OPP Expression CLP Statement Else_aster
    (28) PrintStmt -> . PRINT Expression SEMICOLOM
    (29) ReturnStmt -> . RETURN Expression SEMICOLOM
    (21) Block -> . OKEY Declaration_aster CKEY
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    WHILE           shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Expression                     shift and go to state 28
    Statement                      shift and go to state 154
    ExprStmt                       shift and go to state 29
    WhileStmt                      shift and go to state 30
    IfStmt                         shift and go to state 31
    PrintStmt                      shift and go to state 32
    ReturnStmt                     shift and go to state 33
    Block                          shift and go to state 34
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 138

    (33) Assignment -> Type_ ID EQ . Logic_or
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 88

    Logic_or                       shift and go to state 155
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 139

    (56) Call -> Primary OPP Arguments CLP .

    STAR            reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    DIV             reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    MINUS           reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    PLUS            reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    GT              reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    LT              reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    LTE             reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    GTE             reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    NOTEQ           reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    EQEQ            reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    AND             reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    OR              reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    SEMICOLOM       reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    CLP             reduce using rule 56 (Call -> Primary OPP Arguments CLP .)
    COMMA           reduce using rule 56 (Call -> Primary OPP Arguments CLP .)


state 140

    (64) Arguments -> Expression Expression_aster .

    CLP             reduce using rule 64 (Arguments -> Expression Expression_aster .)


state 141

    (65) Expression_aster -> COMMA . Expression Expression_aster
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Expression                     shift and go to state 156
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 142

    (66) Expression_aster -> empty .

    CLP             reduce using rule 66 (Expression_aster -> empty .)


state 143

    (2) M -> LT MAP GT MapDetail LT DIV MAP GT .

    LT              reduce using rule 2 (M -> LT MAP GT MapDetail LT DIV MAP GT .)


state 144

    (3) MapDetail -> ROW EQ NUMERIC SEMICOLOM MapDetail .

    LT              reduce using rule 3 (MapDetail -> ROW EQ NUMERIC SEMICOLOM MapDetail .)


state 145

    (4) MapDetail -> COL EQ NUMERIC SEMICOLOM MapDetail .

    LT              reduce using rule 4 (MapDetail -> COL EQ NUMERIC SEMICOLOM MapDetail .)


state 146

    (6) A -> LT ARMY GT ArmyDetail LT DIV ARMY . GT

    GT              shift and go to state 157


state 147

    (7) ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM . ArmyDetail
    (7) ArmyDetail -> . ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
    (8) ArmyDetail -> . AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
    (9) ArmyDetail -> . empty
    (74) empty -> .

    ARMY_name       shift and go to state 61
    AMOUNT          shift and go to state 62
    LT              reduce using rule 74 (empty -> .)

    ArmyDetail                     shift and go to state 158
    empty                          shift and go to state 63

state 148

    (8) ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM . ArmyDetail
    (7) ArmyDetail -> . ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
    (8) ArmyDetail -> . AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
    (9) ArmyDetail -> . empty
    (74) empty -> .

    ARMY_name       shift and go to state 61
    AMOUNT          shift and go to state 62
    LT              reduce using rule 74 (empty -> .)

    ArmyDetail                     shift and go to state 159
    empty                          shift and go to state 63

state 149

    (1) Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION GT .

    $end            reduce using rule 1 (Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION GT .)


state 150

    (68) Function -> ID OPP Params CLP . Block
    (21) Block -> . OKEY Declaration_aster CKEY

    OKEY            shift and go to state 40

    Block                          shift and go to state 160

state 151

    (69) Params -> Type_ ID . ParamsAster
    (71) ParamsAster -> . COMMA Params ParamsAster
    (72) ParamsAster -> . empty
    (74) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 162
    CLP             reduce using rule 74 (empty -> .)

  ! COMMA           [ reduce using rule 74 (empty -> .) ]

    ParamsAster                    shift and go to state 161
    empty                          shift and go to state 163

state 152

    (14) VarDecl -> Type_ ID EQ Expression SEMICOLOM .

    FUNC            reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    INT             reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    WHILE           reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    IF              reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    PRINT           reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    RETURN          reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    OKEY            reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    ID              reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    NOT             reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    MINUS           reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    TRUE            reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    FALSE           reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    NUMERIC         reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    NIL             reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    LT              reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)
    CKEY            reduce using rule 14 (VarDecl -> Type_ ID EQ Expression SEMICOLOM .)


state 153

    (30) WhileStmt -> WHILE OPP Expression CLP Statement .

    FUNC            reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    INT             reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    WHILE           reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    IF              reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    PRINT           reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    RETURN          reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    OKEY            reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    ID              reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    NOT             reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    MINUS           reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    TRUE            reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    FALSE           reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    NUMERIC         reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    NIL             reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    LT              reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    CKEY            reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    ELSE            reduce using rule 30 (WhileStmt -> WHILE OPP Expression CLP Statement .)


state 154

    (25) IfStmt -> IF OPP Expression CLP Statement . Else_aster
    (26) Else_aster -> . ELSE Statement
    (27) Else_aster -> . empty
    (74) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 165
    FUNC            reduce using rule 74 (empty -> .)
    INT             reduce using rule 74 (empty -> .)
    WHILE           reduce using rule 74 (empty -> .)
    IF              reduce using rule 74 (empty -> .)
    PRINT           reduce using rule 74 (empty -> .)
    RETURN          reduce using rule 74 (empty -> .)
    OKEY            reduce using rule 74 (empty -> .)
    ID              reduce using rule 74 (empty -> .)
    NOT             reduce using rule 74 (empty -> .)
    MINUS           reduce using rule 74 (empty -> .)
    TRUE            reduce using rule 74 (empty -> .)
    FALSE           reduce using rule 74 (empty -> .)
    NUMERIC         reduce using rule 74 (empty -> .)
    NIL             reduce using rule 74 (empty -> .)
    LT              reduce using rule 74 (empty -> .)
    CKEY            reduce using rule 74 (empty -> .)

  ! ELSE            [ reduce using rule 74 (empty -> .) ]

    Else_aster                     shift and go to state 164
    empty                          shift and go to state 166

state 155

    (33) Assignment -> Type_ ID EQ Logic_or .
    (35) Logic_or -> Logic_or . OR Logic_and

    SEMICOLOM       reduce using rule 33 (Assignment -> Type_ ID EQ Logic_or .)
    CLP             reduce using rule 33 (Assignment -> Type_ ID EQ Logic_or .)
    COMMA           reduce using rule 33 (Assignment -> Type_ ID EQ Logic_or .)
    OR              shift and go to state 77


state 156

    (65) Expression_aster -> COMMA Expression . Expression_aster
    (65) Expression_aster -> . COMMA Expression Expression_aster
    (66) Expression_aster -> . empty
    (74) empty -> .

    COMMA           shift and go to state 141
    CLP             reduce using rule 74 (empty -> .)

    Expression_aster               shift and go to state 167
    empty                          shift and go to state 142

state 157

    (6) A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .

    LT              reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    FUNC            reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    INT             reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    WHILE           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    IF              reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    PRINT           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    RETURN          reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    OKEY            reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    ID              reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    NOT             reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    MINUS           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    TRUE            reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    FALSE           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    NUMERIC         reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    NIL             reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)


state 158

    (7) ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail .

    LT              reduce using rule 7 (ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail .)


state 159

    (8) ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail .

    LT              reduce using rule 8 (ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail .)


state 160

    (68) Function -> ID OPP Params CLP Block .

    FUNC            reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    INT             reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    WHILE           reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    IF              reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    PRINT           reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    RETURN          reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    OKEY            reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    ID              reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    NOT             reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    MINUS           reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    TRUE            reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    FALSE           reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    NUMERIC         reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    NIL             reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    LT              reduce using rule 68 (Function -> ID OPP Params CLP Block .)
    CKEY            reduce using rule 68 (Function -> ID OPP Params CLP Block .)


state 161

    (69) Params -> Type_ ID ParamsAster .

    CLP             reduce using rule 69 (Params -> Type_ ID ParamsAster .)
    COMMA           reduce using rule 69 (Params -> Type_ ID ParamsAster .)


state 162

    (71) ParamsAster -> COMMA . Params ParamsAster
    (69) Params -> . Type_ ID ParamsAster
    (70) Params -> . empty
    (73) Type_ -> . INT
    (74) empty -> .

    INT             shift and go to state 35
    CLP             reduce using rule 74 (empty -> .)
    COMMA           reduce using rule 74 (empty -> .)

    Params                         shift and go to state 168
    Type_                          shift and go to state 132
    empty                          shift and go to state 133

state 163

    (72) ParamsAster -> empty .

    CLP             reduce using rule 72 (ParamsAster -> empty .)
    COMMA           reduce using rule 72 (ParamsAster -> empty .)


state 164

    (25) IfStmt -> IF OPP Expression CLP Statement Else_aster .

    FUNC            reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    INT             reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    WHILE           reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    IF              reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    PRINT           reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    RETURN          reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    OKEY            reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    ID              reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    NOT             reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    MINUS           reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    TRUE            reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    FALSE           reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    NUMERIC         reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    NIL             reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    LT              reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    CKEY            reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)
    ELSE            reduce using rule 25 (IfStmt -> IF OPP Expression CLP Statement Else_aster .)


state 165

    (26) Else_aster -> ELSE . Statement
    (15) Statement -> . ExprStmt
    (16) Statement -> . WhileStmt
    (17) Statement -> . IfStmt
    (18) Statement -> . PrintStmt
    (19) Statement -> . ReturnStmt
    (20) Statement -> . Block
    (24) ExprStmt -> . Expression SEMICOLOM
    (30) WhileStmt -> . WHILE OPP Expression CLP Statement
    (25) IfStmt -> . IF OPP Expression CLP Statement Else_aster
    (28) PrintStmt -> . PRINT Expression SEMICOLOM
    (29) ReturnStmt -> . RETURN Expression SEMICOLOM
    (21) Block -> . OKEY Declaration_aster CKEY
    (31) Expression -> . Assignment
    (32) Assignment -> . ID EQ Logic_or
    (33) Assignment -> . Type_ ID EQ Logic_or
    (34) Assignment -> . Logic_or
    (73) Type_ -> . INT
    (35) Logic_or -> . Logic_or OR Logic_and
    (36) Logic_or -> . Logic_and
    (37) Logic_and -> . Logic_and AND Equality
    (38) Logic_and -> . Equality
    (39) Equality -> . Equality NOTEQ Comparison
    (40) Equality -> . Equality EQEQ Comparison
    (41) Equality -> . Comparison
    (42) Comparison -> . Comparison GT Term
    (43) Comparison -> . Comparison LT Term
    (44) Comparison -> . Comparison LTE Term
    (45) Comparison -> . Comparison GTE Term
    (46) Comparison -> . Term
    (47) Term -> . Term MINUS Factor
    (48) Term -> . Term PLUS Factor
    (49) Term -> . Factor
    (50) Factor -> . Factor STAR Unary
    (51) Factor -> . Factor DIV Unary
    (52) Factor -> . Unary
    (53) Unary -> . NOT Unary
    (54) Unary -> . MINUS Unary
    (55) Unary -> . Call
    (56) Call -> . Primary OPP Arguments CLP
    (57) Call -> . Primary
    (59) Primary -> . TRUE
    (60) Primary -> . FALSE
    (61) Primary -> . NUMERIC
    (62) Primary -> . NIL
    (63) Primary -> . ID

    WHILE           shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    ID              shift and go to state 27
    INT             shift and go to state 35
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56

    Statement                      shift and go to state 169
    ExprStmt                       shift and go to state 29
    WhileStmt                      shift and go to state 30
    IfStmt                         shift and go to state 31
    PrintStmt                      shift and go to state 32
    ReturnStmt                     shift and go to state 33
    Block                          shift and go to state 34
    Expression                     shift and go to state 28
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Type_                          shift and go to state 74
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 166

    (27) Else_aster -> empty .

    FUNC            reduce using rule 27 (Else_aster -> empty .)
    INT             reduce using rule 27 (Else_aster -> empty .)
    WHILE           reduce using rule 27 (Else_aster -> empty .)
    IF              reduce using rule 27 (Else_aster -> empty .)
    PRINT           reduce using rule 27 (Else_aster -> empty .)
    RETURN          reduce using rule 27 (Else_aster -> empty .)
    OKEY            reduce using rule 27 (Else_aster -> empty .)
    ID              reduce using rule 27 (Else_aster -> empty .)
    NOT             reduce using rule 27 (Else_aster -> empty .)
    MINUS           reduce using rule 27 (Else_aster -> empty .)
    TRUE            reduce using rule 27 (Else_aster -> empty .)
    FALSE           reduce using rule 27 (Else_aster -> empty .)
    NUMERIC         reduce using rule 27 (Else_aster -> empty .)
    NIL             reduce using rule 27 (Else_aster -> empty .)
    LT              reduce using rule 27 (Else_aster -> empty .)
    CKEY            reduce using rule 27 (Else_aster -> empty .)
    ELSE            reduce using rule 27 (Else_aster -> empty .)


state 167

    (65) Expression_aster -> COMMA Expression Expression_aster .

    CLP             reduce using rule 65 (Expression_aster -> COMMA Expression Expression_aster .)


state 168

    (71) ParamsAster -> COMMA Params . ParamsAster
    (71) ParamsAster -> . COMMA Params ParamsAster
    (72) ParamsAster -> . empty
    (74) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 162
    CLP             reduce using rule 74 (empty -> .)

  ! COMMA           [ reduce using rule 74 (empty -> .) ]

    ParamsAster                    shift and go to state 170
    empty                          shift and go to state 163

state 169

    (26) Else_aster -> ELSE Statement .

    FUNC            reduce using rule 26 (Else_aster -> ELSE Statement .)
    INT             reduce using rule 26 (Else_aster -> ELSE Statement .)
    WHILE           reduce using rule 26 (Else_aster -> ELSE Statement .)
    IF              reduce using rule 26 (Else_aster -> ELSE Statement .)
    PRINT           reduce using rule 26 (Else_aster -> ELSE Statement .)
    RETURN          reduce using rule 26 (Else_aster -> ELSE Statement .)
    OKEY            reduce using rule 26 (Else_aster -> ELSE Statement .)
    ID              reduce using rule 26 (Else_aster -> ELSE Statement .)
    NOT             reduce using rule 26 (Else_aster -> ELSE Statement .)
    MINUS           reduce using rule 26 (Else_aster -> ELSE Statement .)
    TRUE            reduce using rule 26 (Else_aster -> ELSE Statement .)
    FALSE           reduce using rule 26 (Else_aster -> ELSE Statement .)
    NUMERIC         reduce using rule 26 (Else_aster -> ELSE Statement .)
    NIL             reduce using rule 26 (Else_aster -> ELSE Statement .)
    LT              reduce using rule 26 (Else_aster -> ELSE Statement .)
    CKEY            reduce using rule 26 (Else_aster -> ELSE Statement .)
    ELSE            reduce using rule 26 (Else_aster -> ELSE Statement .)


state 170

    (71) ParamsAster -> COMMA Params ParamsAster .

    CLP             reduce using rule 71 (ParamsAster -> COMMA Params ParamsAster .)
    COMMA           reduce using rule 71 (ParamsAster -> COMMA Params ParamsAster .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 151 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 154 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 168 resolved as shift
WARNING: reduce/reduce conflict in state 135 resolved using rule (Assignment -> Type_ ID EQ Logic_or)
WARNING: rejected rule (Assignment -> Logic_or) in state 135
