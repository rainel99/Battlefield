Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT

Grammar

Rule 0     S' -> Simulation
Rule 1     Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION GT
Rule 2     M -> LT MAP GT MapDetail LT DIV MAP GT
Rule 3     MapDetail -> ROW EQ NUMERIC SEMICOLOM MapDetail
Rule 4     MapDetail -> COL EQ NUMERIC SEMICOLOM MapDetail
Rule 5     MapDetail -> empty
Rule 6     A -> LT ARMY GT ArmyDetail LT DIV ARMY GT
Rule 7     ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
Rule 8     ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
Rule 9     ArmyDetail -> empty
Rule 10    Program -> Declaration
Rule 11    Declaration -> FuncDecl
Rule 12    Declaration -> VarDecl
Rule 13    Declaration -> Statement
Rule 14    Declaration -> empty
Rule 15    VarDecl -> Type_ ID EQ Expression
Rule 16    Statement -> ExprStmt
Rule 17    Statement -> WhileStmt
Rule 18    Statement -> IfStmt
Rule 19    Statement -> PrintStmt
Rule 20    Statement -> ReturnStmt
Rule 21    Statement -> Block
Rule 22    Block -> OKEY Declaration CKEY
Rule 23    ExprStmt -> Expression SEMICOLOM
Rule 24    IfStmt -> IF OPP Expression CLP Statement
Rule 25    PrintStmt -> PRINT Expression SEMICOLOM
Rule 26    ReturnStmt -> RETURN Expression SEMICOLOM
Rule 27    WhileStmt -> WHILE OPP Expression CLP Statement
Rule 28    Expression -> Assignment
Rule 29    Assignment -> Type_ ID EQ Logic_or
Rule 30    Assignment -> Logic_or
Rule 31    Logic_or -> Logic_or OR Logic_and
Rule 32    Logic_or -> Logic_and
Rule 33    Logic_and -> Logic_and AND Equality
Rule 34    Logic_and -> Equality
Rule 35    Equality -> Equality NOTEQ Comparison
Rule 36    Equality -> Equality EQEQ Comparison
Rule 37    Equality -> Comparison
Rule 38    Comparison -> Comparison GT Term
Rule 39    Comparison -> Comparison LT Term
Rule 40    Comparison -> Comparison LTE Term
Rule 41    Comparison -> Comparison GTE Term
Rule 42    Comparison -> Term
Rule 43    Term -> Term MINUS Factor
Rule 44    Term -> Term PLUS Factor
Rule 45    Term -> Factor
Rule 46    Factor -> Factor STAR Unary
Rule 47    Factor -> Factor DIV Unary
Rule 48    Factor -> Unary
Rule 49    Unary -> NOT Unary
Rule 50    Unary -> MINUS Unary
Rule 51    Unary -> Call
Rule 52    Call -> Primary Arguments
Rule 53    Arguments -> empty
Rule 54    Primary -> TRUE
Rule 55    Primary -> FALSE
Rule 56    Primary -> NUMERIC
Rule 57    Primary -> NIL
Rule 58    Primary -> ID
Rule 59    Primary -> OPP Expression CLP
Rule 60    Arguments -> Expression Expression_aster
Rule 61    Expression_aster -> COMMA Expression Expression_aster
Rule 62    Expression_aster -> empty
Rule 63    FuncDecl -> FUNC Function
Rule 64    Function -> ID OPP Params CLP Block
Rule 65    Params -> Type_ ID ParamsAster
Rule 66    Params -> empty
Rule 67    ParamsAster -> COMMA Params ParamsAster
Rule 68    ParamsAster -> empty
Rule 69    Type_ -> INT
Rule 70    empty -> <empty>

Terminals, with rules where they appear

AMOUNT               : 8
AND                  : 33
ARMY                 : 6 6
ARMY_name            : 7
CKEY                 : 22
CLP                  : 24 27 59 64
COL                  : 4
COMMA                : 61 67
DIV                  : 1 2 6 47
DOT                  : 
EQ                   : 3 4 7 8 15 29
EQEQ                 : 36
FALSE                : 55
FUNC                 : 63
GT                   : 1 1 2 2 6 6 38
GTE                  : 41
ID                   : 15 29 58 64 65
IF                   : 24
INT                  : 69
LT                   : 1 1 2 2 6 6 39
LTE                  : 40
MAP                  : 2 2
MINUS                : 43 50
NIL                  : 57
NOT                  : 49
NOTEQ                : 35
NUMERIC              : 3 4 7 8 56
OKEY                 : 22
OPP                  : 24 27 59 64
OR                   : 31
PLUS                 : 44
PRINT                : 25
RETURN               : 26
ROW                  : 3
SEMICOLOM            : 3 4 7 8 23 25 26
SIMULATION           : 1 1
STAR                 : 46
TRUE                 : 54
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

A                    : 1 1
Arguments            : 52
ArmyDetail           : 6 7 8
Assignment           : 28
Block                : 21 64
Call                 : 51
Comparison           : 35 36 37 38 39 40 41
Declaration          : 10 22
Equality             : 33 34 35 36
ExprStmt             : 16
Expression           : 15 23 24 25 26 27 59 60 61
Expression_aster     : 60 61
Factor               : 43 44 45 46 47
FuncDecl             : 11
Function             : 63
IfStmt               : 18
Logic_and            : 31 32 33
Logic_or             : 29 30 31
M                    : 1
MapDetail            : 2 3 4
Params               : 64 67
ParamsAster          : 65 67
Primary              : 52
PrintStmt            : 19
Program              : 1
ReturnStmt           : 20
Simulation           : 0
Statement            : 13 24 27
Term                 : 38 39 40 41 42 43 44
Type_                : 15 29 65
Unary                : 46 47 48 49 50
VarDecl              : 12
WhileStmt            : 17
empty                : 5 9 14 53 62 66 68

Parsing method: LALR

state 0

    (0) S' -> . Simulation
    (1) Simulation -> . LT SIMULATION GT M A A Program LT DIV SIMULATION GT

    LT              shift and go to state 2

    Simulation                     shift and go to state 1

state 1

    (0) S' -> Simulation .



state 2

    (1) Simulation -> LT . SIMULATION GT M A A Program LT DIV SIMULATION GT

    SIMULATION      shift and go to state 3


state 3

    (1) Simulation -> LT SIMULATION . GT M A A Program LT DIV SIMULATION GT

    GT              shift and go to state 4


state 4

    (1) Simulation -> LT SIMULATION GT . M A A Program LT DIV SIMULATION GT
    (2) M -> . LT MAP GT MapDetail LT DIV MAP GT

    LT              shift and go to state 5

    M                              shift and go to state 6

state 5

    (2) M -> LT . MAP GT MapDetail LT DIV MAP GT

    MAP             shift and go to state 7


state 6

    (1) Simulation -> LT SIMULATION GT M . A A Program LT DIV SIMULATION GT
    (6) A -> . LT ARMY GT ArmyDetail LT DIV ARMY GT

    LT              shift and go to state 8

    A                              shift and go to state 9

state 7

    (2) M -> LT MAP . GT MapDetail LT DIV MAP GT

    GT              shift and go to state 10


state 8

    (6) A -> LT . ARMY GT ArmyDetail LT DIV ARMY GT

    ARMY            shift and go to state 11


state 9

    (1) Simulation -> LT SIMULATION GT M A . A Program LT DIV SIMULATION GT
    (6) A -> . LT ARMY GT ArmyDetail LT DIV ARMY GT

    LT              shift and go to state 8

    A                              shift and go to state 12

state 10

    (2) M -> LT MAP GT . MapDetail LT DIV MAP GT
    (3) MapDetail -> . ROW EQ NUMERIC SEMICOLOM MapDetail
    (4) MapDetail -> . COL EQ NUMERIC SEMICOLOM MapDetail
    (5) MapDetail -> . empty
    (70) empty -> .

    ROW             shift and go to state 14
    COL             shift and go to state 15
    LT              reduce using rule 70 (empty -> .)

    MapDetail                      shift and go to state 13
    empty                          shift and go to state 16

state 11

    (6) A -> LT ARMY . GT ArmyDetail LT DIV ARMY GT

    GT              shift and go to state 17


state 12

    (1) Simulation -> LT SIMULATION GT M A A . Program LT DIV SIMULATION GT
    (10) Program -> . Declaration
    (11) Declaration -> . FuncDecl
    (12) Declaration -> . VarDecl
    (13) Declaration -> . Statement
    (14) Declaration -> . empty
    (63) FuncDecl -> . FUNC Function
    (15) VarDecl -> . Type_ ID EQ Expression
    (16) Statement -> . ExprStmt
    (17) Statement -> . WhileStmt
    (18) Statement -> . IfStmt
    (19) Statement -> . PrintStmt
    (20) Statement -> . ReturnStmt
    (21) Statement -> . Block
    (70) empty -> .
    (69) Type_ -> . INT
    (23) ExprStmt -> . Expression SEMICOLOM
    (27) WhileStmt -> . WHILE OPP Expression CLP Statement
    (24) IfStmt -> . IF OPP Expression CLP Statement
    (25) PrintStmt -> . PRINT Expression SEMICOLOM
    (26) ReturnStmt -> . RETURN Expression SEMICOLOM
    (22) Block -> . OKEY Declaration CKEY
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    FUNC            shift and go to state 24
    LT              reduce using rule 70 (empty -> .)
    INT             shift and go to state 34
    WHILE           shift and go to state 35
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Program                        shift and go to state 18
    Declaration                    shift and go to state 19
    FuncDecl                       shift and go to state 20
    VarDecl                        shift and go to state 21
    Statement                      shift and go to state 22
    empty                          shift and go to state 23
    Type_                          shift and go to state 25
    Expression                     shift and go to state 27
    ExprStmt                       shift and go to state 28
    WhileStmt                      shift and go to state 29
    IfStmt                         shift and go to state 30
    PrintStmt                      shift and go to state 31
    ReturnStmt                     shift and go to state 32
    Block                          shift and go to state 33
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 13

    (2) M -> LT MAP GT MapDetail . LT DIV MAP GT

    LT              shift and go to state 57


state 14

    (3) MapDetail -> ROW . EQ NUMERIC SEMICOLOM MapDetail

    EQ              shift and go to state 58


state 15

    (4) MapDetail -> COL . EQ NUMERIC SEMICOLOM MapDetail

    EQ              shift and go to state 59


state 16

    (5) MapDetail -> empty .

    LT              reduce using rule 5 (MapDetail -> empty .)


state 17

    (6) A -> LT ARMY GT . ArmyDetail LT DIV ARMY GT
    (7) ArmyDetail -> . ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
    (8) ArmyDetail -> . AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
    (9) ArmyDetail -> . empty
    (70) empty -> .

    ARMY_name       shift and go to state 61
    AMOUNT          shift and go to state 62
    LT              reduce using rule 70 (empty -> .)

    ArmyDetail                     shift and go to state 60
    empty                          shift and go to state 63

state 18

    (1) Simulation -> LT SIMULATION GT M A A Program . LT DIV SIMULATION GT

    LT              shift and go to state 64


state 19

    (10) Program -> Declaration .

    LT              reduce using rule 10 (Program -> Declaration .)


state 20

    (11) Declaration -> FuncDecl .

    LT              reduce using rule 11 (Declaration -> FuncDecl .)
    CKEY            reduce using rule 11 (Declaration -> FuncDecl .)


state 21

    (12) Declaration -> VarDecl .

    LT              reduce using rule 12 (Declaration -> VarDecl .)
    CKEY            reduce using rule 12 (Declaration -> VarDecl .)


state 22

    (13) Declaration -> Statement .

    LT              reduce using rule 13 (Declaration -> Statement .)
    CKEY            reduce using rule 13 (Declaration -> Statement .)


state 23

    (14) Declaration -> empty .

    LT              reduce using rule 14 (Declaration -> empty .)
    CKEY            reduce using rule 14 (Declaration -> empty .)


state 24

    (63) FuncDecl -> FUNC . Function
    (64) Function -> . ID OPP Params CLP Block

    ID              shift and go to state 66

    Function                       shift and go to state 65

state 25

    (15) VarDecl -> Type_ . ID EQ Expression
    (29) Assignment -> Type_ . ID EQ Logic_or

    ID              shift and go to state 67


state 26

    (58) Primary -> ID .

    INT             reduce using rule 58 (Primary -> ID .)
    NOT             reduce using rule 58 (Primary -> ID .)
    MINUS           reduce using rule 58 (Primary -> ID .)
    TRUE            reduce using rule 58 (Primary -> ID .)
    FALSE           reduce using rule 58 (Primary -> ID .)
    NUMERIC         reduce using rule 58 (Primary -> ID .)
    NIL             reduce using rule 58 (Primary -> ID .)
    ID              reduce using rule 58 (Primary -> ID .)
    OPP             reduce using rule 58 (Primary -> ID .)
    STAR            reduce using rule 58 (Primary -> ID .)
    DIV             reduce using rule 58 (Primary -> ID .)
    PLUS            reduce using rule 58 (Primary -> ID .)
    GT              reduce using rule 58 (Primary -> ID .)
    LT              reduce using rule 58 (Primary -> ID .)
    LTE             reduce using rule 58 (Primary -> ID .)
    GTE             reduce using rule 58 (Primary -> ID .)
    NOTEQ           reduce using rule 58 (Primary -> ID .)
    EQEQ            reduce using rule 58 (Primary -> ID .)
    AND             reduce using rule 58 (Primary -> ID .)
    OR              reduce using rule 58 (Primary -> ID .)
    SEMICOLOM       reduce using rule 58 (Primary -> ID .)
    CLP             reduce using rule 58 (Primary -> ID .)
    COMMA           reduce using rule 58 (Primary -> ID .)
    CKEY            reduce using rule 58 (Primary -> ID .)


state 27

    (23) ExprStmt -> Expression . SEMICOLOM

    SEMICOLOM       shift and go to state 68


state 28

    (16) Statement -> ExprStmt .

    LT              reduce using rule 16 (Statement -> ExprStmt .)
    CKEY            reduce using rule 16 (Statement -> ExprStmt .)


state 29

    (17) Statement -> WhileStmt .

    LT              reduce using rule 17 (Statement -> WhileStmt .)
    CKEY            reduce using rule 17 (Statement -> WhileStmt .)


state 30

    (18) Statement -> IfStmt .

    LT              reduce using rule 18 (Statement -> IfStmt .)
    CKEY            reduce using rule 18 (Statement -> IfStmt .)


state 31

    (19) Statement -> PrintStmt .

    LT              reduce using rule 19 (Statement -> PrintStmt .)
    CKEY            reduce using rule 19 (Statement -> PrintStmt .)


state 32

    (20) Statement -> ReturnStmt .

    LT              reduce using rule 20 (Statement -> ReturnStmt .)
    CKEY            reduce using rule 20 (Statement -> ReturnStmt .)


state 33

    (21) Statement -> Block .

    LT              reduce using rule 21 (Statement -> Block .)
    CKEY            reduce using rule 21 (Statement -> Block .)


state 34

    (69) Type_ -> INT .

    ID              reduce using rule 69 (Type_ -> INT .)


state 35

    (27) WhileStmt -> WHILE . OPP Expression CLP Statement

    OPP             shift and go to state 69


state 36

    (59) Primary -> OPP . Expression CLP
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 70
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 37

    (24) IfStmt -> IF . OPP Expression CLP Statement

    OPP             shift and go to state 72


state 38

    (25) PrintStmt -> PRINT . Expression SEMICOLOM
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 73
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 39

    (26) ReturnStmt -> RETURN . Expression SEMICOLOM
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 74
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 40

    (22) Block -> OKEY . Declaration CKEY
    (11) Declaration -> . FuncDecl
    (12) Declaration -> . VarDecl
    (13) Declaration -> . Statement
    (14) Declaration -> . empty
    (63) FuncDecl -> . FUNC Function
    (15) VarDecl -> . Type_ ID EQ Expression
    (16) Statement -> . ExprStmt
    (17) Statement -> . WhileStmt
    (18) Statement -> . IfStmt
    (19) Statement -> . PrintStmt
    (20) Statement -> . ReturnStmt
    (21) Statement -> . Block
    (70) empty -> .
    (69) Type_ -> . INT
    (23) ExprStmt -> . Expression SEMICOLOM
    (27) WhileStmt -> . WHILE OPP Expression CLP Statement
    (24) IfStmt -> . IF OPP Expression CLP Statement
    (25) PrintStmt -> . PRINT Expression SEMICOLOM
    (26) ReturnStmt -> . RETURN Expression SEMICOLOM
    (22) Block -> . OKEY Declaration CKEY
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    FUNC            shift and go to state 24
    CKEY            reduce using rule 70 (empty -> .)
    INT             shift and go to state 34
    WHILE           shift and go to state 35
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Declaration                    shift and go to state 75
    FuncDecl                       shift and go to state 20
    VarDecl                        shift and go to state 21
    Statement                      shift and go to state 22
    empty                          shift and go to state 23
    Type_                          shift and go to state 25
    Expression                     shift and go to state 27
    ExprStmt                       shift and go to state 28
    WhileStmt                      shift and go to state 29
    IfStmt                         shift and go to state 30
    PrintStmt                      shift and go to state 31
    ReturnStmt                     shift and go to state 32
    Block                          shift and go to state 33
    Assignment                     shift and go to state 41
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 41

    (28) Expression -> Assignment .

    SEMICOLOM       reduce using rule 28 (Expression -> Assignment .)
    CLP             reduce using rule 28 (Expression -> Assignment .)
    STAR            reduce using rule 28 (Expression -> Assignment .)
    DIV             reduce using rule 28 (Expression -> Assignment .)
    MINUS           reduce using rule 28 (Expression -> Assignment .)
    PLUS            reduce using rule 28 (Expression -> Assignment .)
    GT              reduce using rule 28 (Expression -> Assignment .)
    LT              reduce using rule 28 (Expression -> Assignment .)
    LTE             reduce using rule 28 (Expression -> Assignment .)
    GTE             reduce using rule 28 (Expression -> Assignment .)
    NOTEQ           reduce using rule 28 (Expression -> Assignment .)
    EQEQ            reduce using rule 28 (Expression -> Assignment .)
    AND             reduce using rule 28 (Expression -> Assignment .)
    OR              reduce using rule 28 (Expression -> Assignment .)
    COMMA           reduce using rule 28 (Expression -> Assignment .)
    CKEY            reduce using rule 28 (Expression -> Assignment .)


state 42

    (30) Assignment -> Logic_or .
    (31) Logic_or -> Logic_or . OR Logic_and

  ! shift/reduce conflict for OR resolved as shift
    SEMICOLOM       reduce using rule 30 (Assignment -> Logic_or .)
    CLP             reduce using rule 30 (Assignment -> Logic_or .)
    STAR            reduce using rule 30 (Assignment -> Logic_or .)
    DIV             reduce using rule 30 (Assignment -> Logic_or .)
    MINUS           reduce using rule 30 (Assignment -> Logic_or .)
    PLUS            reduce using rule 30 (Assignment -> Logic_or .)
    GT              reduce using rule 30 (Assignment -> Logic_or .)
    LT              reduce using rule 30 (Assignment -> Logic_or .)
    LTE             reduce using rule 30 (Assignment -> Logic_or .)
    GTE             reduce using rule 30 (Assignment -> Logic_or .)
    NOTEQ           reduce using rule 30 (Assignment -> Logic_or .)
    EQEQ            reduce using rule 30 (Assignment -> Logic_or .)
    AND             reduce using rule 30 (Assignment -> Logic_or .)
    COMMA           reduce using rule 30 (Assignment -> Logic_or .)
    CKEY            reduce using rule 30 (Assignment -> Logic_or .)
    OR              shift and go to state 76

  ! OR              [ reduce using rule 30 (Assignment -> Logic_or .) ]


state 43

    (32) Logic_or -> Logic_and .
    (33) Logic_and -> Logic_and . AND Equality

  ! shift/reduce conflict for AND resolved as shift
    OR              reduce using rule 32 (Logic_or -> Logic_and .)
    SEMICOLOM       reduce using rule 32 (Logic_or -> Logic_and .)
    CLP             reduce using rule 32 (Logic_or -> Logic_and .)
    STAR            reduce using rule 32 (Logic_or -> Logic_and .)
    DIV             reduce using rule 32 (Logic_or -> Logic_and .)
    MINUS           reduce using rule 32 (Logic_or -> Logic_and .)
    PLUS            reduce using rule 32 (Logic_or -> Logic_and .)
    GT              reduce using rule 32 (Logic_or -> Logic_and .)
    LT              reduce using rule 32 (Logic_or -> Logic_and .)
    LTE             reduce using rule 32 (Logic_or -> Logic_and .)
    GTE             reduce using rule 32 (Logic_or -> Logic_and .)
    NOTEQ           reduce using rule 32 (Logic_or -> Logic_and .)
    EQEQ            reduce using rule 32 (Logic_or -> Logic_and .)
    COMMA           reduce using rule 32 (Logic_or -> Logic_and .)
    CKEY            reduce using rule 32 (Logic_or -> Logic_and .)
    AND             shift and go to state 77

  ! AND             [ reduce using rule 32 (Logic_or -> Logic_and .) ]


state 44

    (34) Logic_and -> Equality .
    (35) Equality -> Equality . NOTEQ Comparison
    (36) Equality -> Equality . EQEQ Comparison

  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
    AND             reduce using rule 34 (Logic_and -> Equality .)
    OR              reduce using rule 34 (Logic_and -> Equality .)
    SEMICOLOM       reduce using rule 34 (Logic_and -> Equality .)
    CLP             reduce using rule 34 (Logic_and -> Equality .)
    STAR            reduce using rule 34 (Logic_and -> Equality .)
    DIV             reduce using rule 34 (Logic_and -> Equality .)
    MINUS           reduce using rule 34 (Logic_and -> Equality .)
    PLUS            reduce using rule 34 (Logic_and -> Equality .)
    GT              reduce using rule 34 (Logic_and -> Equality .)
    LT              reduce using rule 34 (Logic_and -> Equality .)
    LTE             reduce using rule 34 (Logic_and -> Equality .)
    GTE             reduce using rule 34 (Logic_and -> Equality .)
    COMMA           reduce using rule 34 (Logic_and -> Equality .)
    CKEY            reduce using rule 34 (Logic_and -> Equality .)
    NOTEQ           shift and go to state 78
    EQEQ            shift and go to state 79

  ! NOTEQ           [ reduce using rule 34 (Logic_and -> Equality .) ]
  ! EQEQ            [ reduce using rule 34 (Logic_and -> Equality .) ]


state 45

    (37) Equality -> Comparison .
    (38) Comparison -> Comparison . GT Term
    (39) Comparison -> Comparison . LT Term
    (40) Comparison -> Comparison . LTE Term
    (41) Comparison -> Comparison . GTE Term

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    NOTEQ           reduce using rule 37 (Equality -> Comparison .)
    EQEQ            reduce using rule 37 (Equality -> Comparison .)
    AND             reduce using rule 37 (Equality -> Comparison .)
    OR              reduce using rule 37 (Equality -> Comparison .)
    SEMICOLOM       reduce using rule 37 (Equality -> Comparison .)
    CLP             reduce using rule 37 (Equality -> Comparison .)
    STAR            reduce using rule 37 (Equality -> Comparison .)
    DIV             reduce using rule 37 (Equality -> Comparison .)
    MINUS           reduce using rule 37 (Equality -> Comparison .)
    PLUS            reduce using rule 37 (Equality -> Comparison .)
    COMMA           reduce using rule 37 (Equality -> Comparison .)
    CKEY            reduce using rule 37 (Equality -> Comparison .)
    GT              shift and go to state 80
    LT              shift and go to state 81
    LTE             shift and go to state 82
    GTE             shift and go to state 83

  ! GT              [ reduce using rule 37 (Equality -> Comparison .) ]
  ! LT              [ reduce using rule 37 (Equality -> Comparison .) ]
  ! LTE             [ reduce using rule 37 (Equality -> Comparison .) ]
  ! GTE             [ reduce using rule 37 (Equality -> Comparison .) ]


state 46

    (42) Comparison -> Term .
    (43) Term -> Term . MINUS Factor
    (44) Term -> Term . PLUS Factor

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    GT              reduce using rule 42 (Comparison -> Term .)
    LT              reduce using rule 42 (Comparison -> Term .)
    LTE             reduce using rule 42 (Comparison -> Term .)
    GTE             reduce using rule 42 (Comparison -> Term .)
    NOTEQ           reduce using rule 42 (Comparison -> Term .)
    EQEQ            reduce using rule 42 (Comparison -> Term .)
    AND             reduce using rule 42 (Comparison -> Term .)
    OR              reduce using rule 42 (Comparison -> Term .)
    SEMICOLOM       reduce using rule 42 (Comparison -> Term .)
    CLP             reduce using rule 42 (Comparison -> Term .)
    STAR            reduce using rule 42 (Comparison -> Term .)
    DIV             reduce using rule 42 (Comparison -> Term .)
    COMMA           reduce using rule 42 (Comparison -> Term .)
    CKEY            reduce using rule 42 (Comparison -> Term .)
    MINUS           shift and go to state 84
    PLUS            shift and go to state 85

  ! MINUS           [ reduce using rule 42 (Comparison -> Term .) ]
  ! PLUS            [ reduce using rule 42 (Comparison -> Term .) ]


state 47

    (50) Unary -> MINUS . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Unary                          shift and go to state 86
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 48

    (45) Term -> Factor .
    (46) Factor -> Factor . STAR Unary
    (47) Factor -> Factor . DIV Unary

  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MINUS           reduce using rule 45 (Term -> Factor .)
    PLUS            reduce using rule 45 (Term -> Factor .)
    GT              reduce using rule 45 (Term -> Factor .)
    LT              reduce using rule 45 (Term -> Factor .)
    LTE             reduce using rule 45 (Term -> Factor .)
    GTE             reduce using rule 45 (Term -> Factor .)
    NOTEQ           reduce using rule 45 (Term -> Factor .)
    EQEQ            reduce using rule 45 (Term -> Factor .)
    AND             reduce using rule 45 (Term -> Factor .)
    OR              reduce using rule 45 (Term -> Factor .)
    SEMICOLOM       reduce using rule 45 (Term -> Factor .)
    CLP             reduce using rule 45 (Term -> Factor .)
    COMMA           reduce using rule 45 (Term -> Factor .)
    CKEY            reduce using rule 45 (Term -> Factor .)
    STAR            shift and go to state 87
    DIV             shift and go to state 88

  ! STAR            [ reduce using rule 45 (Term -> Factor .) ]
  ! DIV             [ reduce using rule 45 (Term -> Factor .) ]


state 49

    (48) Factor -> Unary .

    STAR            reduce using rule 48 (Factor -> Unary .)
    DIV             reduce using rule 48 (Factor -> Unary .)
    MINUS           reduce using rule 48 (Factor -> Unary .)
    PLUS            reduce using rule 48 (Factor -> Unary .)
    GT              reduce using rule 48 (Factor -> Unary .)
    LT              reduce using rule 48 (Factor -> Unary .)
    LTE             reduce using rule 48 (Factor -> Unary .)
    GTE             reduce using rule 48 (Factor -> Unary .)
    NOTEQ           reduce using rule 48 (Factor -> Unary .)
    EQEQ            reduce using rule 48 (Factor -> Unary .)
    AND             reduce using rule 48 (Factor -> Unary .)
    OR              reduce using rule 48 (Factor -> Unary .)
    SEMICOLOM       reduce using rule 48 (Factor -> Unary .)
    CLP             reduce using rule 48 (Factor -> Unary .)
    COMMA           reduce using rule 48 (Factor -> Unary .)
    CKEY            reduce using rule 48 (Factor -> Unary .)


state 50

    (49) Unary -> NOT . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Unary                          shift and go to state 89
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 51

    (51) Unary -> Call .

    STAR            reduce using rule 51 (Unary -> Call .)
    DIV             reduce using rule 51 (Unary -> Call .)
    MINUS           reduce using rule 51 (Unary -> Call .)
    PLUS            reduce using rule 51 (Unary -> Call .)
    GT              reduce using rule 51 (Unary -> Call .)
    LT              reduce using rule 51 (Unary -> Call .)
    LTE             reduce using rule 51 (Unary -> Call .)
    GTE             reduce using rule 51 (Unary -> Call .)
    NOTEQ           reduce using rule 51 (Unary -> Call .)
    EQEQ            reduce using rule 51 (Unary -> Call .)
    AND             reduce using rule 51 (Unary -> Call .)
    OR              reduce using rule 51 (Unary -> Call .)
    SEMICOLOM       reduce using rule 51 (Unary -> Call .)
    CLP             reduce using rule 51 (Unary -> Call .)
    COMMA           reduce using rule 51 (Unary -> Call .)
    CKEY            reduce using rule 51 (Unary -> Call .)


state 52

    (52) Call -> Primary . Arguments
    (53) Arguments -> . empty
    (60) Arguments -> . Expression Expression_aster
    (70) empty -> .
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

  ! shift/reduce conflict for MINUS resolved as shift
    STAR            reduce using rule 70 (empty -> .)
    DIV             reduce using rule 70 (empty -> .)
    PLUS            reduce using rule 70 (empty -> .)
    GT              reduce using rule 70 (empty -> .)
    LT              reduce using rule 70 (empty -> .)
    LTE             reduce using rule 70 (empty -> .)
    GTE             reduce using rule 70 (empty -> .)
    NOTEQ           reduce using rule 70 (empty -> .)
    EQEQ            reduce using rule 70 (empty -> .)
    AND             reduce using rule 70 (empty -> .)
    OR              reduce using rule 70 (empty -> .)
    SEMICOLOM       reduce using rule 70 (empty -> .)
    CLP             reduce using rule 70 (empty -> .)
    COMMA           reduce using rule 70 (empty -> .)
    CKEY            reduce using rule 70 (empty -> .)
    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

  ! MINUS           [ reduce using rule 70 (empty -> .) ]

    Primary                        shift and go to state 52
    Arguments                      shift and go to state 90
    empty                          shift and go to state 91
    Expression                     shift and go to state 92
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51

state 53

    (54) Primary -> TRUE .

    INT             reduce using rule 54 (Primary -> TRUE .)
    NOT             reduce using rule 54 (Primary -> TRUE .)
    MINUS           reduce using rule 54 (Primary -> TRUE .)
    TRUE            reduce using rule 54 (Primary -> TRUE .)
    FALSE           reduce using rule 54 (Primary -> TRUE .)
    NUMERIC         reduce using rule 54 (Primary -> TRUE .)
    NIL             reduce using rule 54 (Primary -> TRUE .)
    ID              reduce using rule 54 (Primary -> TRUE .)
    OPP             reduce using rule 54 (Primary -> TRUE .)
    STAR            reduce using rule 54 (Primary -> TRUE .)
    DIV             reduce using rule 54 (Primary -> TRUE .)
    PLUS            reduce using rule 54 (Primary -> TRUE .)
    GT              reduce using rule 54 (Primary -> TRUE .)
    LT              reduce using rule 54 (Primary -> TRUE .)
    LTE             reduce using rule 54 (Primary -> TRUE .)
    GTE             reduce using rule 54 (Primary -> TRUE .)
    NOTEQ           reduce using rule 54 (Primary -> TRUE .)
    EQEQ            reduce using rule 54 (Primary -> TRUE .)
    AND             reduce using rule 54 (Primary -> TRUE .)
    OR              reduce using rule 54 (Primary -> TRUE .)
    SEMICOLOM       reduce using rule 54 (Primary -> TRUE .)
    CLP             reduce using rule 54 (Primary -> TRUE .)
    COMMA           reduce using rule 54 (Primary -> TRUE .)
    CKEY            reduce using rule 54 (Primary -> TRUE .)


state 54

    (55) Primary -> FALSE .

    INT             reduce using rule 55 (Primary -> FALSE .)
    NOT             reduce using rule 55 (Primary -> FALSE .)
    MINUS           reduce using rule 55 (Primary -> FALSE .)
    TRUE            reduce using rule 55 (Primary -> FALSE .)
    FALSE           reduce using rule 55 (Primary -> FALSE .)
    NUMERIC         reduce using rule 55 (Primary -> FALSE .)
    NIL             reduce using rule 55 (Primary -> FALSE .)
    ID              reduce using rule 55 (Primary -> FALSE .)
    OPP             reduce using rule 55 (Primary -> FALSE .)
    STAR            reduce using rule 55 (Primary -> FALSE .)
    DIV             reduce using rule 55 (Primary -> FALSE .)
    PLUS            reduce using rule 55 (Primary -> FALSE .)
    GT              reduce using rule 55 (Primary -> FALSE .)
    LT              reduce using rule 55 (Primary -> FALSE .)
    LTE             reduce using rule 55 (Primary -> FALSE .)
    GTE             reduce using rule 55 (Primary -> FALSE .)
    NOTEQ           reduce using rule 55 (Primary -> FALSE .)
    EQEQ            reduce using rule 55 (Primary -> FALSE .)
    AND             reduce using rule 55 (Primary -> FALSE .)
    OR              reduce using rule 55 (Primary -> FALSE .)
    SEMICOLOM       reduce using rule 55 (Primary -> FALSE .)
    CLP             reduce using rule 55 (Primary -> FALSE .)
    COMMA           reduce using rule 55 (Primary -> FALSE .)
    CKEY            reduce using rule 55 (Primary -> FALSE .)


state 55

    (56) Primary -> NUMERIC .

    INT             reduce using rule 56 (Primary -> NUMERIC .)
    NOT             reduce using rule 56 (Primary -> NUMERIC .)
    MINUS           reduce using rule 56 (Primary -> NUMERIC .)
    TRUE            reduce using rule 56 (Primary -> NUMERIC .)
    FALSE           reduce using rule 56 (Primary -> NUMERIC .)
    NUMERIC         reduce using rule 56 (Primary -> NUMERIC .)
    NIL             reduce using rule 56 (Primary -> NUMERIC .)
    ID              reduce using rule 56 (Primary -> NUMERIC .)
    OPP             reduce using rule 56 (Primary -> NUMERIC .)
    STAR            reduce using rule 56 (Primary -> NUMERIC .)
    DIV             reduce using rule 56 (Primary -> NUMERIC .)
    PLUS            reduce using rule 56 (Primary -> NUMERIC .)
    GT              reduce using rule 56 (Primary -> NUMERIC .)
    LT              reduce using rule 56 (Primary -> NUMERIC .)
    LTE             reduce using rule 56 (Primary -> NUMERIC .)
    GTE             reduce using rule 56 (Primary -> NUMERIC .)
    NOTEQ           reduce using rule 56 (Primary -> NUMERIC .)
    EQEQ            reduce using rule 56 (Primary -> NUMERIC .)
    AND             reduce using rule 56 (Primary -> NUMERIC .)
    OR              reduce using rule 56 (Primary -> NUMERIC .)
    SEMICOLOM       reduce using rule 56 (Primary -> NUMERIC .)
    CLP             reduce using rule 56 (Primary -> NUMERIC .)
    COMMA           reduce using rule 56 (Primary -> NUMERIC .)
    CKEY            reduce using rule 56 (Primary -> NUMERIC .)


state 56

    (57) Primary -> NIL .

    INT             reduce using rule 57 (Primary -> NIL .)
    NOT             reduce using rule 57 (Primary -> NIL .)
    MINUS           reduce using rule 57 (Primary -> NIL .)
    TRUE            reduce using rule 57 (Primary -> NIL .)
    FALSE           reduce using rule 57 (Primary -> NIL .)
    NUMERIC         reduce using rule 57 (Primary -> NIL .)
    NIL             reduce using rule 57 (Primary -> NIL .)
    ID              reduce using rule 57 (Primary -> NIL .)
    OPP             reduce using rule 57 (Primary -> NIL .)
    STAR            reduce using rule 57 (Primary -> NIL .)
    DIV             reduce using rule 57 (Primary -> NIL .)
    PLUS            reduce using rule 57 (Primary -> NIL .)
    GT              reduce using rule 57 (Primary -> NIL .)
    LT              reduce using rule 57 (Primary -> NIL .)
    LTE             reduce using rule 57 (Primary -> NIL .)
    GTE             reduce using rule 57 (Primary -> NIL .)
    NOTEQ           reduce using rule 57 (Primary -> NIL .)
    EQEQ            reduce using rule 57 (Primary -> NIL .)
    AND             reduce using rule 57 (Primary -> NIL .)
    OR              reduce using rule 57 (Primary -> NIL .)
    SEMICOLOM       reduce using rule 57 (Primary -> NIL .)
    CLP             reduce using rule 57 (Primary -> NIL .)
    COMMA           reduce using rule 57 (Primary -> NIL .)
    CKEY            reduce using rule 57 (Primary -> NIL .)


state 57

    (2) M -> LT MAP GT MapDetail LT . DIV MAP GT

    DIV             shift and go to state 93


state 58

    (3) MapDetail -> ROW EQ . NUMERIC SEMICOLOM MapDetail

    NUMERIC         shift and go to state 94


state 59

    (4) MapDetail -> COL EQ . NUMERIC SEMICOLOM MapDetail

    NUMERIC         shift and go to state 95


state 60

    (6) A -> LT ARMY GT ArmyDetail . LT DIV ARMY GT

    LT              shift and go to state 96


state 61

    (7) ArmyDetail -> ARMY_name . EQ NUMERIC SEMICOLOM ArmyDetail

    EQ              shift and go to state 97


state 62

    (8) ArmyDetail -> AMOUNT . EQ NUMERIC SEMICOLOM ArmyDetail

    EQ              shift and go to state 98


state 63

    (9) ArmyDetail -> empty .

    LT              reduce using rule 9 (ArmyDetail -> empty .)


state 64

    (1) Simulation -> LT SIMULATION GT M A A Program LT . DIV SIMULATION GT

    DIV             shift and go to state 99


state 65

    (63) FuncDecl -> FUNC Function .

    LT              reduce using rule 63 (FuncDecl -> FUNC Function .)
    CKEY            reduce using rule 63 (FuncDecl -> FUNC Function .)


state 66

    (64) Function -> ID . OPP Params CLP Block

    OPP             shift and go to state 100


state 67

    (15) VarDecl -> Type_ ID . EQ Expression
    (29) Assignment -> Type_ ID . EQ Logic_or

    EQ              shift and go to state 101


state 68

    (23) ExprStmt -> Expression SEMICOLOM .

    LT              reduce using rule 23 (ExprStmt -> Expression SEMICOLOM .)
    CKEY            reduce using rule 23 (ExprStmt -> Expression SEMICOLOM .)


state 69

    (27) WhileStmt -> WHILE OPP . Expression CLP Statement
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 102
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 70

    (59) Primary -> OPP Expression . CLP

    CLP             shift and go to state 103


state 71

    (29) Assignment -> Type_ . ID EQ Logic_or

    ID              shift and go to state 104


state 72

    (24) IfStmt -> IF OPP . Expression CLP Statement
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 105
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 73

    (25) PrintStmt -> PRINT Expression . SEMICOLOM

    SEMICOLOM       shift and go to state 106


state 74

    (26) ReturnStmt -> RETURN Expression . SEMICOLOM

    SEMICOLOM       shift and go to state 107


state 75

    (22) Block -> OKEY Declaration . CKEY

    CKEY            shift and go to state 108


state 76

    (31) Logic_or -> Logic_or OR . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Logic_and                      shift and go to state 109
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 77

    (33) Logic_and -> Logic_and AND . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Equality                       shift and go to state 110
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 78

    (35) Equality -> Equality NOTEQ . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Comparison                     shift and go to state 111
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 79

    (36) Equality -> Equality EQEQ . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Comparison                     shift and go to state 112
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 80

    (38) Comparison -> Comparison GT . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Term                           shift and go to state 113
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 81

    (39) Comparison -> Comparison LT . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Term                           shift and go to state 114
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 82

    (40) Comparison -> Comparison LTE . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Term                           shift and go to state 115
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 83

    (41) Comparison -> Comparison GTE . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Term                           shift and go to state 116
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 84

    (43) Term -> Term MINUS . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Factor                         shift and go to state 117
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 85

    (44) Term -> Term PLUS . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Factor                         shift and go to state 118
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 86

    (50) Unary -> MINUS Unary .

    STAR            reduce using rule 50 (Unary -> MINUS Unary .)
    DIV             reduce using rule 50 (Unary -> MINUS Unary .)
    MINUS           reduce using rule 50 (Unary -> MINUS Unary .)
    PLUS            reduce using rule 50 (Unary -> MINUS Unary .)
    GT              reduce using rule 50 (Unary -> MINUS Unary .)
    LT              reduce using rule 50 (Unary -> MINUS Unary .)
    LTE             reduce using rule 50 (Unary -> MINUS Unary .)
    GTE             reduce using rule 50 (Unary -> MINUS Unary .)
    NOTEQ           reduce using rule 50 (Unary -> MINUS Unary .)
    EQEQ            reduce using rule 50 (Unary -> MINUS Unary .)
    AND             reduce using rule 50 (Unary -> MINUS Unary .)
    OR              reduce using rule 50 (Unary -> MINUS Unary .)
    SEMICOLOM       reduce using rule 50 (Unary -> MINUS Unary .)
    CLP             reduce using rule 50 (Unary -> MINUS Unary .)
    COMMA           reduce using rule 50 (Unary -> MINUS Unary .)
    CKEY            reduce using rule 50 (Unary -> MINUS Unary .)


state 87

    (46) Factor -> Factor STAR . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Unary                          shift and go to state 119
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 88

    (47) Factor -> Factor DIV . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Unary                          shift and go to state 120
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 89

    (49) Unary -> NOT Unary .

    STAR            reduce using rule 49 (Unary -> NOT Unary .)
    DIV             reduce using rule 49 (Unary -> NOT Unary .)
    MINUS           reduce using rule 49 (Unary -> NOT Unary .)
    PLUS            reduce using rule 49 (Unary -> NOT Unary .)
    GT              reduce using rule 49 (Unary -> NOT Unary .)
    LT              reduce using rule 49 (Unary -> NOT Unary .)
    LTE             reduce using rule 49 (Unary -> NOT Unary .)
    GTE             reduce using rule 49 (Unary -> NOT Unary .)
    NOTEQ           reduce using rule 49 (Unary -> NOT Unary .)
    EQEQ            reduce using rule 49 (Unary -> NOT Unary .)
    AND             reduce using rule 49 (Unary -> NOT Unary .)
    OR              reduce using rule 49 (Unary -> NOT Unary .)
    SEMICOLOM       reduce using rule 49 (Unary -> NOT Unary .)
    CLP             reduce using rule 49 (Unary -> NOT Unary .)
    COMMA           reduce using rule 49 (Unary -> NOT Unary .)
    CKEY            reduce using rule 49 (Unary -> NOT Unary .)


state 90

    (52) Call -> Primary Arguments .

    STAR            reduce using rule 52 (Call -> Primary Arguments .)
    DIV             reduce using rule 52 (Call -> Primary Arguments .)
    MINUS           reduce using rule 52 (Call -> Primary Arguments .)
    PLUS            reduce using rule 52 (Call -> Primary Arguments .)
    GT              reduce using rule 52 (Call -> Primary Arguments .)
    LT              reduce using rule 52 (Call -> Primary Arguments .)
    LTE             reduce using rule 52 (Call -> Primary Arguments .)
    GTE             reduce using rule 52 (Call -> Primary Arguments .)
    NOTEQ           reduce using rule 52 (Call -> Primary Arguments .)
    EQEQ            reduce using rule 52 (Call -> Primary Arguments .)
    AND             reduce using rule 52 (Call -> Primary Arguments .)
    OR              reduce using rule 52 (Call -> Primary Arguments .)
    SEMICOLOM       reduce using rule 52 (Call -> Primary Arguments .)
    CLP             reduce using rule 52 (Call -> Primary Arguments .)
    COMMA           reduce using rule 52 (Call -> Primary Arguments .)
    CKEY            reduce using rule 52 (Call -> Primary Arguments .)


state 91

    (53) Arguments -> empty .

    STAR            reduce using rule 53 (Arguments -> empty .)
    DIV             reduce using rule 53 (Arguments -> empty .)
    MINUS           reduce using rule 53 (Arguments -> empty .)
    PLUS            reduce using rule 53 (Arguments -> empty .)
    GT              reduce using rule 53 (Arguments -> empty .)
    LT              reduce using rule 53 (Arguments -> empty .)
    LTE             reduce using rule 53 (Arguments -> empty .)
    GTE             reduce using rule 53 (Arguments -> empty .)
    NOTEQ           reduce using rule 53 (Arguments -> empty .)
    EQEQ            reduce using rule 53 (Arguments -> empty .)
    AND             reduce using rule 53 (Arguments -> empty .)
    OR              reduce using rule 53 (Arguments -> empty .)
    SEMICOLOM       reduce using rule 53 (Arguments -> empty .)
    CLP             reduce using rule 53 (Arguments -> empty .)
    COMMA           reduce using rule 53 (Arguments -> empty .)
    CKEY            reduce using rule 53 (Arguments -> empty .)


state 92

    (60) Arguments -> Expression . Expression_aster
    (61) Expression_aster -> . COMMA Expression Expression_aster
    (62) Expression_aster -> . empty
    (70) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 122
    STAR            reduce using rule 70 (empty -> .)
    DIV             reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    PLUS            reduce using rule 70 (empty -> .)
    GT              reduce using rule 70 (empty -> .)
    LT              reduce using rule 70 (empty -> .)
    LTE             reduce using rule 70 (empty -> .)
    GTE             reduce using rule 70 (empty -> .)
    NOTEQ           reduce using rule 70 (empty -> .)
    EQEQ            reduce using rule 70 (empty -> .)
    AND             reduce using rule 70 (empty -> .)
    OR              reduce using rule 70 (empty -> .)
    SEMICOLOM       reduce using rule 70 (empty -> .)
    CLP             reduce using rule 70 (empty -> .)
    CKEY            reduce using rule 70 (empty -> .)

  ! COMMA           [ reduce using rule 70 (empty -> .) ]

    Expression_aster               shift and go to state 121
    empty                          shift and go to state 123

state 93

    (2) M -> LT MAP GT MapDetail LT DIV . MAP GT

    MAP             shift and go to state 124


state 94

    (3) MapDetail -> ROW EQ NUMERIC . SEMICOLOM MapDetail

    SEMICOLOM       shift and go to state 125


state 95

    (4) MapDetail -> COL EQ NUMERIC . SEMICOLOM MapDetail

    SEMICOLOM       shift and go to state 126


state 96

    (6) A -> LT ARMY GT ArmyDetail LT . DIV ARMY GT

    DIV             shift and go to state 127


state 97

    (7) ArmyDetail -> ARMY_name EQ . NUMERIC SEMICOLOM ArmyDetail

    NUMERIC         shift and go to state 128


state 98

    (8) ArmyDetail -> AMOUNT EQ . NUMERIC SEMICOLOM ArmyDetail

    NUMERIC         shift and go to state 129


state 99

    (1) Simulation -> LT SIMULATION GT M A A Program LT DIV . SIMULATION GT

    SIMULATION      shift and go to state 130


state 100

    (64) Function -> ID OPP . Params CLP Block
    (65) Params -> . Type_ ID ParamsAster
    (66) Params -> . empty
    (69) Type_ -> . INT
    (70) empty -> .

    INT             shift and go to state 34
    CLP             reduce using rule 70 (empty -> .)

    Params                         shift and go to state 131
    Type_                          shift and go to state 132
    empty                          shift and go to state 133

state 101

    (15) VarDecl -> Type_ ID EQ . Expression
    (29) Assignment -> Type_ ID EQ . Logic_or
    (28) Expression -> . Assignment
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (69) Type_ -> . INT
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Type_                          shift and go to state 71
    Expression                     shift and go to state 134
    Logic_or                       shift and go to state 135
    Assignment                     shift and go to state 41
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 102

    (27) WhileStmt -> WHILE OPP Expression . CLP Statement

    CLP             shift and go to state 136


state 103

    (59) Primary -> OPP Expression CLP .

    INT             reduce using rule 59 (Primary -> OPP Expression CLP .)
    NOT             reduce using rule 59 (Primary -> OPP Expression CLP .)
    MINUS           reduce using rule 59 (Primary -> OPP Expression CLP .)
    TRUE            reduce using rule 59 (Primary -> OPP Expression CLP .)
    FALSE           reduce using rule 59 (Primary -> OPP Expression CLP .)
    NUMERIC         reduce using rule 59 (Primary -> OPP Expression CLP .)
    NIL             reduce using rule 59 (Primary -> OPP Expression CLP .)
    ID              reduce using rule 59 (Primary -> OPP Expression CLP .)
    OPP             reduce using rule 59 (Primary -> OPP Expression CLP .)
    STAR            reduce using rule 59 (Primary -> OPP Expression CLP .)
    DIV             reduce using rule 59 (Primary -> OPP Expression CLP .)
    PLUS            reduce using rule 59 (Primary -> OPP Expression CLP .)
    GT              reduce using rule 59 (Primary -> OPP Expression CLP .)
    LT              reduce using rule 59 (Primary -> OPP Expression CLP .)
    LTE             reduce using rule 59 (Primary -> OPP Expression CLP .)
    GTE             reduce using rule 59 (Primary -> OPP Expression CLP .)
    NOTEQ           reduce using rule 59 (Primary -> OPP Expression CLP .)
    EQEQ            reduce using rule 59 (Primary -> OPP Expression CLP .)
    AND             reduce using rule 59 (Primary -> OPP Expression CLP .)
    OR              reduce using rule 59 (Primary -> OPP Expression CLP .)
    SEMICOLOM       reduce using rule 59 (Primary -> OPP Expression CLP .)
    CLP             reduce using rule 59 (Primary -> OPP Expression CLP .)
    COMMA           reduce using rule 59 (Primary -> OPP Expression CLP .)
    CKEY            reduce using rule 59 (Primary -> OPP Expression CLP .)


state 104

    (29) Assignment -> Type_ ID . EQ Logic_or

    EQ              shift and go to state 137


state 105

    (24) IfStmt -> IF OPP Expression . CLP Statement

    CLP             shift and go to state 138


state 106

    (25) PrintStmt -> PRINT Expression SEMICOLOM .

    LT              reduce using rule 25 (PrintStmt -> PRINT Expression SEMICOLOM .)
    CKEY            reduce using rule 25 (PrintStmt -> PRINT Expression SEMICOLOM .)


state 107

    (26) ReturnStmt -> RETURN Expression SEMICOLOM .

    LT              reduce using rule 26 (ReturnStmt -> RETURN Expression SEMICOLOM .)
    CKEY            reduce using rule 26 (ReturnStmt -> RETURN Expression SEMICOLOM .)


state 108

    (22) Block -> OKEY Declaration CKEY .

    LT              reduce using rule 22 (Block -> OKEY Declaration CKEY .)
    CKEY            reduce using rule 22 (Block -> OKEY Declaration CKEY .)


state 109

    (31) Logic_or -> Logic_or OR Logic_and .
    (33) Logic_and -> Logic_and . AND Equality

  ! shift/reduce conflict for AND resolved as shift
    OR              reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    SEMICOLOM       reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    CLP             reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    STAR            reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    DIV             reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    MINUS           reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    PLUS            reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    GT              reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    LT              reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    LTE             reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    GTE             reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    NOTEQ           reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    EQEQ            reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    COMMA           reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    CKEY            reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .)
    AND             shift and go to state 77

  ! AND             [ reduce using rule 31 (Logic_or -> Logic_or OR Logic_and .) ]


state 110

    (33) Logic_and -> Logic_and AND Equality .
    (35) Equality -> Equality . NOTEQ Comparison
    (36) Equality -> Equality . EQEQ Comparison

  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
    AND             reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    OR              reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    SEMICOLOM       reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    CLP             reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    STAR            reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    DIV             reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    MINUS           reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    PLUS            reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    GT              reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    LT              reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    LTE             reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    GTE             reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    COMMA           reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    CKEY            reduce using rule 33 (Logic_and -> Logic_and AND Equality .)
    NOTEQ           shift and go to state 78
    EQEQ            shift and go to state 79

  ! NOTEQ           [ reduce using rule 33 (Logic_and -> Logic_and AND Equality .) ]
  ! EQEQ            [ reduce using rule 33 (Logic_and -> Logic_and AND Equality .) ]


state 111

    (35) Equality -> Equality NOTEQ Comparison .
    (38) Comparison -> Comparison . GT Term
    (39) Comparison -> Comparison . LT Term
    (40) Comparison -> Comparison . LTE Term
    (41) Comparison -> Comparison . GTE Term

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    NOTEQ           reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    EQEQ            reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    AND             reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    OR              reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    SEMICOLOM       reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    CLP             reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    STAR            reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    DIV             reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    MINUS           reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    PLUS            reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    COMMA           reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    CKEY            reduce using rule 35 (Equality -> Equality NOTEQ Comparison .)
    GT              shift and go to state 80
    LT              shift and go to state 81
    LTE             shift and go to state 82
    GTE             shift and go to state 83

  ! GT              [ reduce using rule 35 (Equality -> Equality NOTEQ Comparison .) ]
  ! LT              [ reduce using rule 35 (Equality -> Equality NOTEQ Comparison .) ]
  ! LTE             [ reduce using rule 35 (Equality -> Equality NOTEQ Comparison .) ]
  ! GTE             [ reduce using rule 35 (Equality -> Equality NOTEQ Comparison .) ]


state 112

    (36) Equality -> Equality EQEQ Comparison .
    (38) Comparison -> Comparison . GT Term
    (39) Comparison -> Comparison . LT Term
    (40) Comparison -> Comparison . LTE Term
    (41) Comparison -> Comparison . GTE Term

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    NOTEQ           reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    EQEQ            reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    AND             reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    OR              reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    SEMICOLOM       reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    CLP             reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    STAR            reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    DIV             reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    MINUS           reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    PLUS            reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    COMMA           reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    CKEY            reduce using rule 36 (Equality -> Equality EQEQ Comparison .)
    GT              shift and go to state 80
    LT              shift and go to state 81
    LTE             shift and go to state 82
    GTE             shift and go to state 83

  ! GT              [ reduce using rule 36 (Equality -> Equality EQEQ Comparison .) ]
  ! LT              [ reduce using rule 36 (Equality -> Equality EQEQ Comparison .) ]
  ! LTE             [ reduce using rule 36 (Equality -> Equality EQEQ Comparison .) ]
  ! GTE             [ reduce using rule 36 (Equality -> Equality EQEQ Comparison .) ]


state 113

    (38) Comparison -> Comparison GT Term .
    (43) Term -> Term . MINUS Factor
    (44) Term -> Term . PLUS Factor

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    GT              reduce using rule 38 (Comparison -> Comparison GT Term .)
    LT              reduce using rule 38 (Comparison -> Comparison GT Term .)
    LTE             reduce using rule 38 (Comparison -> Comparison GT Term .)
    GTE             reduce using rule 38 (Comparison -> Comparison GT Term .)
    NOTEQ           reduce using rule 38 (Comparison -> Comparison GT Term .)
    EQEQ            reduce using rule 38 (Comparison -> Comparison GT Term .)
    AND             reduce using rule 38 (Comparison -> Comparison GT Term .)
    OR              reduce using rule 38 (Comparison -> Comparison GT Term .)
    SEMICOLOM       reduce using rule 38 (Comparison -> Comparison GT Term .)
    CLP             reduce using rule 38 (Comparison -> Comparison GT Term .)
    STAR            reduce using rule 38 (Comparison -> Comparison GT Term .)
    DIV             reduce using rule 38 (Comparison -> Comparison GT Term .)
    COMMA           reduce using rule 38 (Comparison -> Comparison GT Term .)
    CKEY            reduce using rule 38 (Comparison -> Comparison GT Term .)
    MINUS           shift and go to state 84
    PLUS            shift and go to state 85

  ! MINUS           [ reduce using rule 38 (Comparison -> Comparison GT Term .) ]
  ! PLUS            [ reduce using rule 38 (Comparison -> Comparison GT Term .) ]


state 114

    (39) Comparison -> Comparison LT Term .
    (43) Term -> Term . MINUS Factor
    (44) Term -> Term . PLUS Factor

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    GT              reduce using rule 39 (Comparison -> Comparison LT Term .)
    LT              reduce using rule 39 (Comparison -> Comparison LT Term .)
    LTE             reduce using rule 39 (Comparison -> Comparison LT Term .)
    GTE             reduce using rule 39 (Comparison -> Comparison LT Term .)
    NOTEQ           reduce using rule 39 (Comparison -> Comparison LT Term .)
    EQEQ            reduce using rule 39 (Comparison -> Comparison LT Term .)
    AND             reduce using rule 39 (Comparison -> Comparison LT Term .)
    OR              reduce using rule 39 (Comparison -> Comparison LT Term .)
    SEMICOLOM       reduce using rule 39 (Comparison -> Comparison LT Term .)
    CLP             reduce using rule 39 (Comparison -> Comparison LT Term .)
    STAR            reduce using rule 39 (Comparison -> Comparison LT Term .)
    DIV             reduce using rule 39 (Comparison -> Comparison LT Term .)
    COMMA           reduce using rule 39 (Comparison -> Comparison LT Term .)
    CKEY            reduce using rule 39 (Comparison -> Comparison LT Term .)
    MINUS           shift and go to state 84
    PLUS            shift and go to state 85

  ! MINUS           [ reduce using rule 39 (Comparison -> Comparison LT Term .) ]
  ! PLUS            [ reduce using rule 39 (Comparison -> Comparison LT Term .) ]


state 115

    (40) Comparison -> Comparison LTE Term .
    (43) Term -> Term . MINUS Factor
    (44) Term -> Term . PLUS Factor

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    GT              reduce using rule 40 (Comparison -> Comparison LTE Term .)
    LT              reduce using rule 40 (Comparison -> Comparison LTE Term .)
    LTE             reduce using rule 40 (Comparison -> Comparison LTE Term .)
    GTE             reduce using rule 40 (Comparison -> Comparison LTE Term .)
    NOTEQ           reduce using rule 40 (Comparison -> Comparison LTE Term .)
    EQEQ            reduce using rule 40 (Comparison -> Comparison LTE Term .)
    AND             reduce using rule 40 (Comparison -> Comparison LTE Term .)
    OR              reduce using rule 40 (Comparison -> Comparison LTE Term .)
    SEMICOLOM       reduce using rule 40 (Comparison -> Comparison LTE Term .)
    CLP             reduce using rule 40 (Comparison -> Comparison LTE Term .)
    STAR            reduce using rule 40 (Comparison -> Comparison LTE Term .)
    DIV             reduce using rule 40 (Comparison -> Comparison LTE Term .)
    COMMA           reduce using rule 40 (Comparison -> Comparison LTE Term .)
    CKEY            reduce using rule 40 (Comparison -> Comparison LTE Term .)
    MINUS           shift and go to state 84
    PLUS            shift and go to state 85

  ! MINUS           [ reduce using rule 40 (Comparison -> Comparison LTE Term .) ]
  ! PLUS            [ reduce using rule 40 (Comparison -> Comparison LTE Term .) ]


state 116

    (41) Comparison -> Comparison GTE Term .
    (43) Term -> Term . MINUS Factor
    (44) Term -> Term . PLUS Factor

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    GT              reduce using rule 41 (Comparison -> Comparison GTE Term .)
    LT              reduce using rule 41 (Comparison -> Comparison GTE Term .)
    LTE             reduce using rule 41 (Comparison -> Comparison GTE Term .)
    GTE             reduce using rule 41 (Comparison -> Comparison GTE Term .)
    NOTEQ           reduce using rule 41 (Comparison -> Comparison GTE Term .)
    EQEQ            reduce using rule 41 (Comparison -> Comparison GTE Term .)
    AND             reduce using rule 41 (Comparison -> Comparison GTE Term .)
    OR              reduce using rule 41 (Comparison -> Comparison GTE Term .)
    SEMICOLOM       reduce using rule 41 (Comparison -> Comparison GTE Term .)
    CLP             reduce using rule 41 (Comparison -> Comparison GTE Term .)
    STAR            reduce using rule 41 (Comparison -> Comparison GTE Term .)
    DIV             reduce using rule 41 (Comparison -> Comparison GTE Term .)
    COMMA           reduce using rule 41 (Comparison -> Comparison GTE Term .)
    CKEY            reduce using rule 41 (Comparison -> Comparison GTE Term .)
    MINUS           shift and go to state 84
    PLUS            shift and go to state 85

  ! MINUS           [ reduce using rule 41 (Comparison -> Comparison GTE Term .) ]
  ! PLUS            [ reduce using rule 41 (Comparison -> Comparison GTE Term .) ]


state 117

    (43) Term -> Term MINUS Factor .
    (46) Factor -> Factor . STAR Unary
    (47) Factor -> Factor . DIV Unary

  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MINUS           reduce using rule 43 (Term -> Term MINUS Factor .)
    PLUS            reduce using rule 43 (Term -> Term MINUS Factor .)
    GT              reduce using rule 43 (Term -> Term MINUS Factor .)
    LT              reduce using rule 43 (Term -> Term MINUS Factor .)
    LTE             reduce using rule 43 (Term -> Term MINUS Factor .)
    GTE             reduce using rule 43 (Term -> Term MINUS Factor .)
    NOTEQ           reduce using rule 43 (Term -> Term MINUS Factor .)
    EQEQ            reduce using rule 43 (Term -> Term MINUS Factor .)
    AND             reduce using rule 43 (Term -> Term MINUS Factor .)
    OR              reduce using rule 43 (Term -> Term MINUS Factor .)
    SEMICOLOM       reduce using rule 43 (Term -> Term MINUS Factor .)
    CLP             reduce using rule 43 (Term -> Term MINUS Factor .)
    COMMA           reduce using rule 43 (Term -> Term MINUS Factor .)
    CKEY            reduce using rule 43 (Term -> Term MINUS Factor .)
    STAR            shift and go to state 87
    DIV             shift and go to state 88

  ! STAR            [ reduce using rule 43 (Term -> Term MINUS Factor .) ]
  ! DIV             [ reduce using rule 43 (Term -> Term MINUS Factor .) ]


state 118

    (44) Term -> Term PLUS Factor .
    (46) Factor -> Factor . STAR Unary
    (47) Factor -> Factor . DIV Unary

  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    MINUS           reduce using rule 44 (Term -> Term PLUS Factor .)
    PLUS            reduce using rule 44 (Term -> Term PLUS Factor .)
    GT              reduce using rule 44 (Term -> Term PLUS Factor .)
    LT              reduce using rule 44 (Term -> Term PLUS Factor .)
    LTE             reduce using rule 44 (Term -> Term PLUS Factor .)
    GTE             reduce using rule 44 (Term -> Term PLUS Factor .)
    NOTEQ           reduce using rule 44 (Term -> Term PLUS Factor .)
    EQEQ            reduce using rule 44 (Term -> Term PLUS Factor .)
    AND             reduce using rule 44 (Term -> Term PLUS Factor .)
    OR              reduce using rule 44 (Term -> Term PLUS Factor .)
    SEMICOLOM       reduce using rule 44 (Term -> Term PLUS Factor .)
    CLP             reduce using rule 44 (Term -> Term PLUS Factor .)
    COMMA           reduce using rule 44 (Term -> Term PLUS Factor .)
    CKEY            reduce using rule 44 (Term -> Term PLUS Factor .)
    STAR            shift and go to state 87
    DIV             shift and go to state 88

  ! STAR            [ reduce using rule 44 (Term -> Term PLUS Factor .) ]
  ! DIV             [ reduce using rule 44 (Term -> Term PLUS Factor .) ]


state 119

    (46) Factor -> Factor STAR Unary .

    STAR            reduce using rule 46 (Factor -> Factor STAR Unary .)
    DIV             reduce using rule 46 (Factor -> Factor STAR Unary .)
    MINUS           reduce using rule 46 (Factor -> Factor STAR Unary .)
    PLUS            reduce using rule 46 (Factor -> Factor STAR Unary .)
    GT              reduce using rule 46 (Factor -> Factor STAR Unary .)
    LT              reduce using rule 46 (Factor -> Factor STAR Unary .)
    LTE             reduce using rule 46 (Factor -> Factor STAR Unary .)
    GTE             reduce using rule 46 (Factor -> Factor STAR Unary .)
    NOTEQ           reduce using rule 46 (Factor -> Factor STAR Unary .)
    EQEQ            reduce using rule 46 (Factor -> Factor STAR Unary .)
    AND             reduce using rule 46 (Factor -> Factor STAR Unary .)
    OR              reduce using rule 46 (Factor -> Factor STAR Unary .)
    SEMICOLOM       reduce using rule 46 (Factor -> Factor STAR Unary .)
    CLP             reduce using rule 46 (Factor -> Factor STAR Unary .)
    COMMA           reduce using rule 46 (Factor -> Factor STAR Unary .)
    CKEY            reduce using rule 46 (Factor -> Factor STAR Unary .)


state 120

    (47) Factor -> Factor DIV Unary .

    STAR            reduce using rule 47 (Factor -> Factor DIV Unary .)
    DIV             reduce using rule 47 (Factor -> Factor DIV Unary .)
    MINUS           reduce using rule 47 (Factor -> Factor DIV Unary .)
    PLUS            reduce using rule 47 (Factor -> Factor DIV Unary .)
    GT              reduce using rule 47 (Factor -> Factor DIV Unary .)
    LT              reduce using rule 47 (Factor -> Factor DIV Unary .)
    LTE             reduce using rule 47 (Factor -> Factor DIV Unary .)
    GTE             reduce using rule 47 (Factor -> Factor DIV Unary .)
    NOTEQ           reduce using rule 47 (Factor -> Factor DIV Unary .)
    EQEQ            reduce using rule 47 (Factor -> Factor DIV Unary .)
    AND             reduce using rule 47 (Factor -> Factor DIV Unary .)
    OR              reduce using rule 47 (Factor -> Factor DIV Unary .)
    SEMICOLOM       reduce using rule 47 (Factor -> Factor DIV Unary .)
    CLP             reduce using rule 47 (Factor -> Factor DIV Unary .)
    COMMA           reduce using rule 47 (Factor -> Factor DIV Unary .)
    CKEY            reduce using rule 47 (Factor -> Factor DIV Unary .)


state 121

    (60) Arguments -> Expression Expression_aster .

    STAR            reduce using rule 60 (Arguments -> Expression Expression_aster .)
    DIV             reduce using rule 60 (Arguments -> Expression Expression_aster .)
    MINUS           reduce using rule 60 (Arguments -> Expression Expression_aster .)
    PLUS            reduce using rule 60 (Arguments -> Expression Expression_aster .)
    GT              reduce using rule 60 (Arguments -> Expression Expression_aster .)
    LT              reduce using rule 60 (Arguments -> Expression Expression_aster .)
    LTE             reduce using rule 60 (Arguments -> Expression Expression_aster .)
    GTE             reduce using rule 60 (Arguments -> Expression Expression_aster .)
    NOTEQ           reduce using rule 60 (Arguments -> Expression Expression_aster .)
    EQEQ            reduce using rule 60 (Arguments -> Expression Expression_aster .)
    AND             reduce using rule 60 (Arguments -> Expression Expression_aster .)
    OR              reduce using rule 60 (Arguments -> Expression Expression_aster .)
    SEMICOLOM       reduce using rule 60 (Arguments -> Expression Expression_aster .)
    CLP             reduce using rule 60 (Arguments -> Expression Expression_aster .)
    COMMA           reduce using rule 60 (Arguments -> Expression Expression_aster .)
    CKEY            reduce using rule 60 (Arguments -> Expression Expression_aster .)


state 122

    (61) Expression_aster -> COMMA . Expression Expression_aster
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 139
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 123

    (62) Expression_aster -> empty .

    STAR            reduce using rule 62 (Expression_aster -> empty .)
    DIV             reduce using rule 62 (Expression_aster -> empty .)
    MINUS           reduce using rule 62 (Expression_aster -> empty .)
    PLUS            reduce using rule 62 (Expression_aster -> empty .)
    GT              reduce using rule 62 (Expression_aster -> empty .)
    LT              reduce using rule 62 (Expression_aster -> empty .)
    LTE             reduce using rule 62 (Expression_aster -> empty .)
    GTE             reduce using rule 62 (Expression_aster -> empty .)
    NOTEQ           reduce using rule 62 (Expression_aster -> empty .)
    EQEQ            reduce using rule 62 (Expression_aster -> empty .)
    AND             reduce using rule 62 (Expression_aster -> empty .)
    OR              reduce using rule 62 (Expression_aster -> empty .)
    SEMICOLOM       reduce using rule 62 (Expression_aster -> empty .)
    CLP             reduce using rule 62 (Expression_aster -> empty .)
    COMMA           reduce using rule 62 (Expression_aster -> empty .)
    CKEY            reduce using rule 62 (Expression_aster -> empty .)


state 124

    (2) M -> LT MAP GT MapDetail LT DIV MAP . GT

    GT              shift and go to state 140


state 125

    (3) MapDetail -> ROW EQ NUMERIC SEMICOLOM . MapDetail
    (3) MapDetail -> . ROW EQ NUMERIC SEMICOLOM MapDetail
    (4) MapDetail -> . COL EQ NUMERIC SEMICOLOM MapDetail
    (5) MapDetail -> . empty
    (70) empty -> .

    ROW             shift and go to state 14
    COL             shift and go to state 15
    LT              reduce using rule 70 (empty -> .)

    MapDetail                      shift and go to state 141
    empty                          shift and go to state 16

state 126

    (4) MapDetail -> COL EQ NUMERIC SEMICOLOM . MapDetail
    (3) MapDetail -> . ROW EQ NUMERIC SEMICOLOM MapDetail
    (4) MapDetail -> . COL EQ NUMERIC SEMICOLOM MapDetail
    (5) MapDetail -> . empty
    (70) empty -> .

    ROW             shift and go to state 14
    COL             shift and go to state 15
    LT              reduce using rule 70 (empty -> .)

    MapDetail                      shift and go to state 142
    empty                          shift and go to state 16

state 127

    (6) A -> LT ARMY GT ArmyDetail LT DIV . ARMY GT

    ARMY            shift and go to state 143


state 128

    (7) ArmyDetail -> ARMY_name EQ NUMERIC . SEMICOLOM ArmyDetail

    SEMICOLOM       shift and go to state 144


state 129

    (8) ArmyDetail -> AMOUNT EQ NUMERIC . SEMICOLOM ArmyDetail

    SEMICOLOM       shift and go to state 145


state 130

    (1) Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION . GT

    GT              shift and go to state 146


state 131

    (64) Function -> ID OPP Params . CLP Block

    CLP             shift and go to state 147


state 132

    (65) Params -> Type_ . ID ParamsAster

    ID              shift and go to state 148


state 133

    (66) Params -> empty .

    CLP             reduce using rule 66 (Params -> empty .)
    COMMA           reduce using rule 66 (Params -> empty .)


state 134

    (15) VarDecl -> Type_ ID EQ Expression .

    LT              reduce using rule 15 (VarDecl -> Type_ ID EQ Expression .)
    CKEY            reduce using rule 15 (VarDecl -> Type_ ID EQ Expression .)


state 135

    (29) Assignment -> Type_ ID EQ Logic_or .
    (31) Logic_or -> Logic_or . OR Logic_and
    (30) Assignment -> Logic_or .

    SEMICOLOM       reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    OR              shift and go to state 76
    LT              reduce using rule 30 (Assignment -> Logic_or .)
    CKEY            reduce using rule 30 (Assignment -> Logic_or .)


state 136

    (27) WhileStmt -> WHILE OPP Expression CLP . Statement
    (16) Statement -> . ExprStmt
    (17) Statement -> . WhileStmt
    (18) Statement -> . IfStmt
    (19) Statement -> . PrintStmt
    (20) Statement -> . ReturnStmt
    (21) Statement -> . Block
    (23) ExprStmt -> . Expression SEMICOLOM
    (27) WhileStmt -> . WHILE OPP Expression CLP Statement
    (24) IfStmt -> . IF OPP Expression CLP Statement
    (25) PrintStmt -> . PRINT Expression SEMICOLOM
    (26) ReturnStmt -> . RETURN Expression SEMICOLOM
    (22) Block -> . OKEY Declaration CKEY
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    WHILE           shift and go to state 35
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 27
    Statement                      shift and go to state 149
    ExprStmt                       shift and go to state 28
    WhileStmt                      shift and go to state 29
    IfStmt                         shift and go to state 30
    PrintStmt                      shift and go to state 31
    ReturnStmt                     shift and go to state 32
    Block                          shift and go to state 33
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 137

    (29) Assignment -> Type_ ID EQ . Logic_or
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Logic_or                       shift and go to state 150
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 138

    (24) IfStmt -> IF OPP Expression CLP . Statement
    (16) Statement -> . ExprStmt
    (17) Statement -> . WhileStmt
    (18) Statement -> . IfStmt
    (19) Statement -> . PrintStmt
    (20) Statement -> . ReturnStmt
    (21) Statement -> . Block
    (23) ExprStmt -> . Expression SEMICOLOM
    (27) WhileStmt -> . WHILE OPP Expression CLP Statement
    (24) IfStmt -> . IF OPP Expression CLP Statement
    (25) PrintStmt -> . PRINT Expression SEMICOLOM
    (26) ReturnStmt -> . RETURN Expression SEMICOLOM
    (22) Block -> . OKEY Declaration CKEY
    (28) Expression -> . Assignment
    (29) Assignment -> . Type_ ID EQ Logic_or
    (30) Assignment -> . Logic_or
    (69) Type_ -> . INT
    (31) Logic_or -> . Logic_or OR Logic_and
    (32) Logic_or -> . Logic_and
    (33) Logic_and -> . Logic_and AND Equality
    (34) Logic_and -> . Equality
    (35) Equality -> . Equality NOTEQ Comparison
    (36) Equality -> . Equality EQEQ Comparison
    (37) Equality -> . Comparison
    (38) Comparison -> . Comparison GT Term
    (39) Comparison -> . Comparison LT Term
    (40) Comparison -> . Comparison LTE Term
    (41) Comparison -> . Comparison GTE Term
    (42) Comparison -> . Term
    (43) Term -> . Term MINUS Factor
    (44) Term -> . Term PLUS Factor
    (45) Term -> . Factor
    (46) Factor -> . Factor STAR Unary
    (47) Factor -> . Factor DIV Unary
    (48) Factor -> . Unary
    (49) Unary -> . NOT Unary
    (50) Unary -> . MINUS Unary
    (51) Unary -> . Call
    (52) Call -> . Primary Arguments
    (54) Primary -> . TRUE
    (55) Primary -> . FALSE
    (56) Primary -> . NUMERIC
    (57) Primary -> . NIL
    (58) Primary -> . ID
    (59) Primary -> . OPP Expression CLP

    WHILE           shift and go to state 35
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    RETURN          shift and go to state 39
    OKEY            shift and go to state 40
    INT             shift and go to state 34
    NOT             shift and go to state 50
    MINUS           shift and go to state 47
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUMERIC         shift and go to state 55
    NIL             shift and go to state 56
    ID              shift and go to state 26
    OPP             shift and go to state 36

    Expression                     shift and go to state 27
    Statement                      shift and go to state 151
    ExprStmt                       shift and go to state 28
    WhileStmt                      shift and go to state 29
    IfStmt                         shift and go to state 30
    PrintStmt                      shift and go to state 31
    ReturnStmt                     shift and go to state 32
    Block                          shift and go to state 33
    Assignment                     shift and go to state 41
    Type_                          shift and go to state 71
    Logic_or                       shift and go to state 42
    Logic_and                      shift and go to state 43
    Equality                       shift and go to state 44
    Comparison                     shift and go to state 45
    Term                           shift and go to state 46
    Factor                         shift and go to state 48
    Unary                          shift and go to state 49
    Call                           shift and go to state 51
    Primary                        shift and go to state 52

state 139

    (61) Expression_aster -> COMMA Expression . Expression_aster
    (61) Expression_aster -> . COMMA Expression Expression_aster
    (62) Expression_aster -> . empty
    (70) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 122
    STAR            reduce using rule 70 (empty -> .)
    DIV             reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    PLUS            reduce using rule 70 (empty -> .)
    GT              reduce using rule 70 (empty -> .)
    LT              reduce using rule 70 (empty -> .)
    LTE             reduce using rule 70 (empty -> .)
    GTE             reduce using rule 70 (empty -> .)
    NOTEQ           reduce using rule 70 (empty -> .)
    EQEQ            reduce using rule 70 (empty -> .)
    AND             reduce using rule 70 (empty -> .)
    OR              reduce using rule 70 (empty -> .)
    SEMICOLOM       reduce using rule 70 (empty -> .)
    CLP             reduce using rule 70 (empty -> .)
    CKEY            reduce using rule 70 (empty -> .)

  ! COMMA           [ reduce using rule 70 (empty -> .) ]

    Expression_aster               shift and go to state 152
    empty                          shift and go to state 123

state 140

    (2) M -> LT MAP GT MapDetail LT DIV MAP GT .

    LT              reduce using rule 2 (M -> LT MAP GT MapDetail LT DIV MAP GT .)


state 141

    (3) MapDetail -> ROW EQ NUMERIC SEMICOLOM MapDetail .

    LT              reduce using rule 3 (MapDetail -> ROW EQ NUMERIC SEMICOLOM MapDetail .)


state 142

    (4) MapDetail -> COL EQ NUMERIC SEMICOLOM MapDetail .

    LT              reduce using rule 4 (MapDetail -> COL EQ NUMERIC SEMICOLOM MapDetail .)


state 143

    (6) A -> LT ARMY GT ArmyDetail LT DIV ARMY . GT

    GT              shift and go to state 153


state 144

    (7) ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM . ArmyDetail
    (7) ArmyDetail -> . ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
    (8) ArmyDetail -> . AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
    (9) ArmyDetail -> . empty
    (70) empty -> .

    ARMY_name       shift and go to state 61
    AMOUNT          shift and go to state 62
    LT              reduce using rule 70 (empty -> .)

    ArmyDetail                     shift and go to state 154
    empty                          shift and go to state 63

state 145

    (8) ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM . ArmyDetail
    (7) ArmyDetail -> . ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail
    (8) ArmyDetail -> . AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail
    (9) ArmyDetail -> . empty
    (70) empty -> .

    ARMY_name       shift and go to state 61
    AMOUNT          shift and go to state 62
    LT              reduce using rule 70 (empty -> .)

    ArmyDetail                     shift and go to state 155
    empty                          shift and go to state 63

state 146

    (1) Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION GT .

    $end            reduce using rule 1 (Simulation -> LT SIMULATION GT M A A Program LT DIV SIMULATION GT .)


state 147

    (64) Function -> ID OPP Params CLP . Block
    (22) Block -> . OKEY Declaration CKEY

    OKEY            shift and go to state 40

    Block                          shift and go to state 156

state 148

    (65) Params -> Type_ ID . ParamsAster
    (67) ParamsAster -> . COMMA Params ParamsAster
    (68) ParamsAster -> . empty
    (70) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 158
    CLP             reduce using rule 70 (empty -> .)

  ! COMMA           [ reduce using rule 70 (empty -> .) ]

    ParamsAster                    shift and go to state 157
    empty                          shift and go to state 159

state 149

    (27) WhileStmt -> WHILE OPP Expression CLP Statement .

    LT              reduce using rule 27 (WhileStmt -> WHILE OPP Expression CLP Statement .)
    CKEY            reduce using rule 27 (WhileStmt -> WHILE OPP Expression CLP Statement .)


state 150

    (29) Assignment -> Type_ ID EQ Logic_or .
    (31) Logic_or -> Logic_or . OR Logic_and

  ! shift/reduce conflict for OR resolved as shift
    CLP             reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    SEMICOLOM       reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    STAR            reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    DIV             reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    MINUS           reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    PLUS            reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    GT              reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    LT              reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    LTE             reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    GTE             reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    NOTEQ           reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    EQEQ            reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    AND             reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    COMMA           reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    CKEY            reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .)
    OR              shift and go to state 76

  ! OR              [ reduce using rule 29 (Assignment -> Type_ ID EQ Logic_or .) ]


state 151

    (24) IfStmt -> IF OPP Expression CLP Statement .

    LT              reduce using rule 24 (IfStmt -> IF OPP Expression CLP Statement .)
    CKEY            reduce using rule 24 (IfStmt -> IF OPP Expression CLP Statement .)


state 152

    (61) Expression_aster -> COMMA Expression Expression_aster .

    STAR            reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    DIV             reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    MINUS           reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    PLUS            reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    GT              reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    LT              reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    LTE             reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    GTE             reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    NOTEQ           reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    EQEQ            reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    AND             reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    OR              reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    SEMICOLOM       reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    CLP             reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    COMMA           reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)
    CKEY            reduce using rule 61 (Expression_aster -> COMMA Expression Expression_aster .)


state 153

    (6) A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .

    LT              reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    FUNC            reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    INT             reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    WHILE           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    IF              reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    PRINT           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    RETURN          reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    OKEY            reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    NOT             reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    MINUS           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    TRUE            reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    FALSE           reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    NUMERIC         reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    NIL             reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    ID              reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)
    OPP             reduce using rule 6 (A -> LT ARMY GT ArmyDetail LT DIV ARMY GT .)


state 154

    (7) ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail .

    LT              reduce using rule 7 (ArmyDetail -> ARMY_name EQ NUMERIC SEMICOLOM ArmyDetail .)


state 155

    (8) ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail .

    LT              reduce using rule 8 (ArmyDetail -> AMOUNT EQ NUMERIC SEMICOLOM ArmyDetail .)


state 156

    (64) Function -> ID OPP Params CLP Block .

    LT              reduce using rule 64 (Function -> ID OPP Params CLP Block .)
    CKEY            reduce using rule 64 (Function -> ID OPP Params CLP Block .)


state 157

    (65) Params -> Type_ ID ParamsAster .

    CLP             reduce using rule 65 (Params -> Type_ ID ParamsAster .)
    COMMA           reduce using rule 65 (Params -> Type_ ID ParamsAster .)


state 158

    (67) ParamsAster -> COMMA . Params ParamsAster
    (65) Params -> . Type_ ID ParamsAster
    (66) Params -> . empty
    (69) Type_ -> . INT
    (70) empty -> .

    INT             shift and go to state 34
    CLP             reduce using rule 70 (empty -> .)
    COMMA           reduce using rule 70 (empty -> .)

    Params                         shift and go to state 160
    Type_                          shift and go to state 132
    empty                          shift and go to state 133

state 159

    (68) ParamsAster -> empty .

    CLP             reduce using rule 68 (ParamsAster -> empty .)
    COMMA           reduce using rule 68 (ParamsAster -> empty .)


state 160

    (67) ParamsAster -> COMMA Params . ParamsAster
    (67) ParamsAster -> . COMMA Params ParamsAster
    (68) ParamsAster -> . empty
    (70) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 158
    CLP             reduce using rule 70 (empty -> .)

  ! COMMA           [ reduce using rule 70 (empty -> .) ]

    ParamsAster                    shift and go to state 161
    empty                          shift and go to state 159

state 161

    (67) ParamsAster -> COMMA Params ParamsAster .

    CLP             reduce using rule 67 (ParamsAster -> COMMA Params ParamsAster .)
    COMMA           reduce using rule 67 (ParamsAster -> COMMA Params ParamsAster .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 44 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 44 resolved as shift
WARNING: shift/reduce conflict for GT in state 45 resolved as shift
WARNING: shift/reduce conflict for LT in state 45 resolved as shift
WARNING: shift/reduce conflict for LTE in state 45 resolved as shift
WARNING: shift/reduce conflict for GTE in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for STAR in state 48 resolved as shift
WARNING: shift/reduce conflict for DIV in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 110 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 110 resolved as shift
WARNING: shift/reduce conflict for GT in state 111 resolved as shift
WARNING: shift/reduce conflict for LT in state 111 resolved as shift
WARNING: shift/reduce conflict for LTE in state 111 resolved as shift
WARNING: shift/reduce conflict for GTE in state 111 resolved as shift
WARNING: shift/reduce conflict for GT in state 112 resolved as shift
WARNING: shift/reduce conflict for LT in state 112 resolved as shift
WARNING: shift/reduce conflict for LTE in state 112 resolved as shift
WARNING: shift/reduce conflict for GTE in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for STAR in state 117 resolved as shift
WARNING: shift/reduce conflict for DIV in state 117 resolved as shift
WARNING: shift/reduce conflict for STAR in state 118 resolved as shift
WARNING: shift/reduce conflict for DIV in state 118 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 139 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 150 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 160 resolved as shift
